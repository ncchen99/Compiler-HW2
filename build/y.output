Terminals unused in grammar

    TRUE
    FALSE
    SHR
    BAN
    BOR
    BNT
    BXO
    BAN_ASSIGN
    BOR_ASSIGN
    BXO_ASSIGN
    SHR_ASSIGN
    SHL_ASSIGN
    WHILE
    BREAK
    CONTINUE


State 54 conflicts: 1 shift/reduce
State 55 conflicts: 1 shift/reduce
State 56 conflicts: 8 shift/reduce
State 57 conflicts: 2 shift/reduce
State 58 conflicts: 3 shift/reduce
State 135 conflicts: 2 shift/reduce


Grammar

    0 $accept: Program $end

    1 $@1: %empty

    2 Program: $@1 GlobalStatementList

    3 GlobalStatementList: GlobalStatementList GlobalStatement
    4                    | GlobalStatement

    5 GlobalStatement: FunctionDeclStmt
    6                | ';'

    7 $@2: %empty

    8 $@3: %empty

    9 FunctionDeclStmt: VARIABLE_T IDENT $@2 '(' ParameterList ')' $@3 FuncBlock

   10 ParameterList: Parameter
   11              | ParameterList ',' Parameter
   12              | %empty

   13 Parameter: VARIABLE_T IDENT
   14          | VARIABLE_T IDENT '[' ']'

   15 FuncBlock: '{' StatementList RETURNExpr ';' '}'
   16          | '{' StatementList '}'

   17 RETURNExpr: RETURN Expression

   18 StatementList: Statement StatementList
   19              | Statement

   20 Statement: DeclarationStmt ';'
   21          | SimpleStmt ';'
   22          | Block ';'
   23          | CoutStmt ';'
   24          | IFStmt ';'
   25          | FORStmt ';'
   26          | ';'

   27 SimpleStmt: AssignmentStmt
   28           | ExpressionStmt
   29           | IncDecStmt

   30 AssignmentStmt: Expression assign_op Expression

   31 assign_op: VAL_ASSIGN
   32          | ADD_ASSIGN
   33          | SUB_ASSIGN
   34          | MUL_ASSIGN
   35          | DIV_ASSIGN
   36          | REM_ASSIGN

   37 ExpressionStmt: Expression

   38 IncDecStmt: Expression INC_ASSIGN
   39           | Expression DEC_ASSIGN

   40 DeclarationStmt: VARIABLE_T IDENT '=' Expression
   41                | VARIABLE_T IDENT

   42 $@4: %empty

   43 Block: '{' $@4 StatementList '}'

   44 CoutStmt: COUT SHL PrintableList

   45 PrintableList: Printable
   46              | PrintableList SHL Printable

   47 Printable: Expression

   48 IFStmt: IF Condition Block
   49       | IF Condition Block ELSE Block
   50       | IF Condition Block ELSE IFStmt

   51 Condition: Expression

   52 FORStmt: FOR Condition Block
   53        | FOR ForClause Block

   54 ForClause: InitStmt ';' Condition ';' PostStmt

   55 InitStmt: SimpleStmt

   56 PostStmt: SimpleStmt

   57 Expression: LogicalORExpr

   58 LogicalORExpr: LogicalANDExpr LOR LogicalANDExpr
   59              | LogicalANDExpr

   60 LogicalANDExpr: ComparisonExpr LAN ComparisonExpr
   61               | ComparisonExpr

   62 ComparisonExpr: AdditionExpr cmp_op AdditionExpr
   63               | AdditionExpr

   64 AdditionExpr: MultiplicationExpr add_op MultiplicationExpr
   65             | AdditionExpr add_op MultiplicationExpr
   66             | MultiplicationExpr

   67 MultiplicationExpr: UnaryExpr mul_op UnaryExpr
   68                   | UnaryExpr

   69 UnaryExpr: unary_op UnaryExpr
   70          | PrimaryExpr

   71 cmp_op: EQL
   72       | NEQ
   73       | LES
   74       | LEQ
   75       | GTR
   76       | GEQ

   77 add_op: ADD
   78       | SUB

   79 mul_op: MUL
   80       | DIV
   81       | REM

   82 unary_op: ADD
   83         | SUB
   84         | NOT

   85 Type: INT
   86     | FLOAT
   87     | STRING
   88     | BOOL

   89 PrimaryExpr: Operand
   90            | ConversionExpr

   91 Operand: Literal
   92        | IDENT
   93        | IDENT '(' ')'
   94        | '(' Expression ')'

   95 ConversionExpr: '(' Type ')' Expression

   96 Literal: INT_LIT
   97        | FLOAT_LIT
   98        | BOOL_LIT
   99        | STR_LIT
  100        | ENDL


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 9 93 94 95
    ')' (41) 9 93 94 95
    ',' (44) 11
    ';' (59) 6 15 20 21 22 23 24 25 26 54
    '=' (61) 40
    '[' (91) 14
    ']' (93) 14
    '{' (123) 15 16 43
    '}' (125) 15 16 43
    error (256)
    COUT (258) 44
    INT (259) 85
    FLOAT (260) 86
    STRING (261) 87
    BOOL (262) 88
    TRUE (263)
    FALSE (264)
    SHR (265)
    SHL (266) 44 46
    BAN (267)
    BOR (268)
    BNT (269)
    BXO (270)
    ADD (271) 77 82
    SUB (272) 78 83
    MUL (273) 79
    DIV (274) 80
    REM (275) 81
    NOT (276) 84
    GTR (277) 75
    LES (278) 73
    GEQ (279) 76
    LEQ (280) 74
    EQL (281) 71
    NEQ (282) 72
    LAN (283) 60
    LOR (284) 58
    VAL_ASSIGN (285) 31
    ADD_ASSIGN (286) 32
    SUB_ASSIGN (287) 33
    MUL_ASSIGN (288) 34
    DIV_ASSIGN (289) 35
    REM_ASSIGN (290) 36
    BAN_ASSIGN (291)
    BOR_ASSIGN (292)
    BXO_ASSIGN (293)
    SHR_ASSIGN (294)
    SHL_ASSIGN (295)
    INC_ASSIGN (296) 38
    DEC_ASSIGN (297) 39
    IF (298) 48 49 50
    ELSE (299) 49 50
    FOR (300) 52 53
    WHILE (301)
    RETURN (302) 17
    BREAK (303)
    CONTINUE (304)
    ENDL (305) 100
    VARIABLE_T <var_type> (306) 9 13 14 40 41
    INT_LIT <i_var> (307) 96
    FLOAT_LIT <f_var> (308) 97
    STR_LIT <s_var> (309) 99
    IDENT <s_var> (310) 9 13 14 40 41 92 93
    BOOL_LIT <b_var> (311) 98


Nonterminals, with rules where they appear

    $accept (66)
        on left: 0
    Program (67)
        on left: 2
        on right: 0
    $@1 (68)
        on left: 1
        on right: 2
    GlobalStatementList (69)
        on left: 3 4
        on right: 2 3
    GlobalStatement (70)
        on left: 5 6
        on right: 3 4
    FunctionDeclStmt (71)
        on left: 9
        on right: 5
    $@2 (72)
        on left: 7
        on right: 9
    $@3 (73)
        on left: 8
        on right: 9
    ParameterList (74)
        on left: 10 11 12
        on right: 9 11
    Parameter (75)
        on left: 13 14
        on right: 10 11
    FuncBlock (76)
        on left: 15 16
        on right: 9
    RETURNExpr (77)
        on left: 17
        on right: 15
    StatementList (78)
        on left: 18 19
        on right: 15 16 18 43
    Statement (79)
        on left: 20 21 22 23 24 25 26
        on right: 18 19
    SimpleStmt (80)
        on left: 27 28 29
        on right: 21 55 56
    AssignmentStmt (81)
        on left: 30
        on right: 27
    assign_op <s_var> (82)
        on left: 31 32 33 34 35 36
        on right: 30
    ExpressionStmt (83)
        on left: 37
        on right: 28
    IncDecStmt (84)
        on left: 38 39
        on right: 29
    DeclarationStmt (85)
        on left: 40 41
        on right: 20
    Block (86)
        on left: 43
        on right: 22 48 49 50 52 53
    $@4 (87)
        on left: 42
        on right: 43
    CoutStmt (88)
        on left: 44
        on right: 23
    PrintableList <s_var> (89)
        on left: 45 46
        on right: 44 46
    Printable (90)
        on left: 47
        on right: 45 46
    IFStmt (91)
        on left: 48 49 50
        on right: 24 50
    Condition (92)
        on left: 51
        on right: 48 49 50 52 54
    FORStmt (93)
        on left: 52 53
        on right: 25
    ForClause (94)
        on left: 54
        on right: 53
    InitStmt (95)
        on left: 55
        on right: 54
    PostStmt (96)
        on left: 56
        on right: 54
    Expression <s_var> (97)
        on left: 57
        on right: 17 30 37 38 39 40 47 51 94 95
    LogicalORExpr <s_var> (98)
        on left: 58 59
        on right: 57
    LogicalANDExpr <s_var> (99)
        on left: 60 61
        on right: 58 59
    ComparisonExpr <s_var> (100)
        on left: 62 63
        on right: 60 61
    AdditionExpr <s_var> (101)
        on left: 64 65 66
        on right: 62 63 65
    MultiplicationExpr <s_var> (102)
        on left: 67 68
        on right: 64 65 66
    UnaryExpr <s_var> (103)
        on left: 69 70
        on right: 67 68 69
    cmp_op <s_var> (104)
        on left: 71 72 73 74 75 76
        on right: 62
    add_op <s_var> (105)
        on left: 77 78
        on right: 64 65
    mul_op <s_var> (106)
        on left: 79 80 81
        on right: 67
    unary_op <s_var> (107)
        on left: 82 83 84
        on right: 69
    Type <s_var> (108)
        on left: 85 86 87 88
        on right: 95
    PrimaryExpr <s_var> (109)
        on left: 89 90
        on right: 70
    Operand <s_var> (110)
        on left: 91 92 93 94
        on right: 89
    ConversionExpr (111)
        on left: 95
        on right: 90
    Literal <s_var> (112)
        on left: 96 97 98 99 100
        on right: 91


State 0

    0 $accept: . Program $end

    $default  reduce using rule 1 ($@1)

    Program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: Program . $end

    $end  shift, and go to state 3


State 2

    2 Program: $@1 . GlobalStatementList

    VARIABLE_T  shift, and go to state 4
    ';'         shift, and go to state 5

    GlobalStatementList  go to state 6
    GlobalStatement      go to state 7
    FunctionDeclStmt     go to state 8


State 3

    0 $accept: Program $end .

    $default  accept


State 4

    9 FunctionDeclStmt: VARIABLE_T . IDENT $@2 '(' ParameterList ')' $@3 FuncBlock

    IDENT  shift, and go to state 9


State 5

    6 GlobalStatement: ';' .

    $default  reduce using rule 6 (GlobalStatement)


State 6

    2 Program: $@1 GlobalStatementList .
    3 GlobalStatementList: GlobalStatementList . GlobalStatement

    VARIABLE_T  shift, and go to state 4
    ';'         shift, and go to state 5

    $default  reduce using rule 2 (Program)

    GlobalStatement   go to state 10
    FunctionDeclStmt  go to state 8


State 7

    4 GlobalStatementList: GlobalStatement .

    $default  reduce using rule 4 (GlobalStatementList)


State 8

    5 GlobalStatement: FunctionDeclStmt .

    $default  reduce using rule 5 (GlobalStatement)


State 9

    9 FunctionDeclStmt: VARIABLE_T IDENT . $@2 '(' ParameterList ')' $@3 FuncBlock

    $default  reduce using rule 7 ($@2)

    $@2  go to state 11


State 10

    3 GlobalStatementList: GlobalStatementList GlobalStatement .

    $default  reduce using rule 3 (GlobalStatementList)


State 11

    9 FunctionDeclStmt: VARIABLE_T IDENT $@2 . '(' ParameterList ')' $@3 FuncBlock

    '('  shift, and go to state 12


State 12

    9 FunctionDeclStmt: VARIABLE_T IDENT $@2 '(' . ParameterList ')' $@3 FuncBlock

    VARIABLE_T  shift, and go to state 13

    $default  reduce using rule 12 (ParameterList)

    ParameterList  go to state 14
    Parameter      go to state 15


State 13

   13 Parameter: VARIABLE_T . IDENT
   14          | VARIABLE_T . IDENT '[' ']'

    IDENT  shift, and go to state 16


State 14

    9 FunctionDeclStmt: VARIABLE_T IDENT $@2 '(' ParameterList . ')' $@3 FuncBlock
   11 ParameterList: ParameterList . ',' Parameter

    ')'  shift, and go to state 17
    ','  shift, and go to state 18


State 15

   10 ParameterList: Parameter .

    $default  reduce using rule 10 (ParameterList)


State 16

   13 Parameter: VARIABLE_T IDENT .
   14          | VARIABLE_T IDENT . '[' ']'

    '['  shift, and go to state 19

    $default  reduce using rule 13 (Parameter)


State 17

    9 FunctionDeclStmt: VARIABLE_T IDENT $@2 '(' ParameterList ')' . $@3 FuncBlock

    $default  reduce using rule 8 ($@3)

    $@3  go to state 20


State 18

   11 ParameterList: ParameterList ',' . Parameter

    VARIABLE_T  shift, and go to state 13

    Parameter  go to state 21


State 19

   14 Parameter: VARIABLE_T IDENT '[' . ']'

    ']'  shift, and go to state 22


State 20

    9 FunctionDeclStmt: VARIABLE_T IDENT $@2 '(' ParameterList ')' $@3 . FuncBlock

    '{'  shift, and go to state 23

    FuncBlock  go to state 24


State 21

   11 ParameterList: ParameterList ',' Parameter .

    $default  reduce using rule 11 (ParameterList)


State 22

   14 Parameter: VARIABLE_T IDENT '[' ']' .

    $default  reduce using rule 14 (Parameter)


State 23

   15 FuncBlock: '{' . StatementList RETURNExpr ';' '}'
   16          | '{' . StatementList '}'

    COUT        shift, and go to state 25
    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    NOT         shift, and go to state 28
    IF          shift, and go to state 29
    FOR         shift, and go to state 30
    ENDL        shift, and go to state 31
    VARIABLE_T  shift, and go to state 32
    INT_LIT     shift, and go to state 33
    FLOAT_LIT   shift, and go to state 34
    STR_LIT     shift, and go to state 35
    IDENT       shift, and go to state 36
    BOOL_LIT    shift, and go to state 37
    ';'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40

    StatementList       go to state 41
    Statement           go to state 42
    SimpleStmt          go to state 43
    AssignmentStmt      go to state 44
    ExpressionStmt      go to state 45
    IncDecStmt          go to state 46
    DeclarationStmt     go to state 47
    Block               go to state 48
    CoutStmt            go to state 49
    IFStmt              go to state 50
    FORStmt             go to state 51
    Expression          go to state 52
    LogicalORExpr       go to state 53
    LogicalANDExpr      go to state 54
    ComparisonExpr      go to state 55
    AdditionExpr        go to state 56
    MultiplicationExpr  go to state 57
    UnaryExpr           go to state 58
    unary_op            go to state 59
    PrimaryExpr         go to state 60
    Operand             go to state 61
    ConversionExpr      go to state 62
    Literal             go to state 63


State 24

    9 FunctionDeclStmt: VARIABLE_T IDENT $@2 '(' ParameterList ')' $@3 FuncBlock .

    $default  reduce using rule 9 (FunctionDeclStmt)


State 25

   44 CoutStmt: COUT . SHL PrintableList

    SHL  shift, and go to state 64


State 26

   82 unary_op: ADD .

    $default  reduce using rule 82 (unary_op)


State 27

   83 unary_op: SUB .

    $default  reduce using rule 83 (unary_op)


State 28

   84 unary_op: NOT .

    $default  reduce using rule 84 (unary_op)


State 29

   48 IFStmt: IF . Condition Block
   49       | IF . Condition Block ELSE Block
   50       | IF . Condition Block ELSE IFStmt

    ADD        shift, and go to state 26
    SUB        shift, and go to state 27
    NOT        shift, and go to state 28
    ENDL       shift, and go to state 31
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    STR_LIT    shift, and go to state 35
    IDENT      shift, and go to state 36
    BOOL_LIT   shift, and go to state 37
    '('        shift, and go to state 39

    Condition           go to state 65
    Expression          go to state 66
    LogicalORExpr       go to state 53
    LogicalANDExpr      go to state 54
    ComparisonExpr      go to state 55
    AdditionExpr        go to state 56
    MultiplicationExpr  go to state 57
    UnaryExpr           go to state 58
    unary_op            go to state 59
    PrimaryExpr         go to state 60
    Operand             go to state 61
    ConversionExpr      go to state 62
    Literal             go to state 63


State 30

   52 FORStmt: FOR . Condition Block
   53        | FOR . ForClause Block

    ADD        shift, and go to state 26
    SUB        shift, and go to state 27
    NOT        shift, and go to state 28
    ENDL       shift, and go to state 31
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    STR_LIT    shift, and go to state 35
    IDENT      shift, and go to state 36
    BOOL_LIT   shift, and go to state 37
    '('        shift, and go to state 39

    SimpleStmt          go to state 67
    AssignmentStmt      go to state 44
    ExpressionStmt      go to state 45
    IncDecStmt          go to state 46
    Condition           go to state 68
    ForClause           go to state 69
    InitStmt            go to state 70
    Expression          go to state 71
    LogicalORExpr       go to state 53
    LogicalANDExpr      go to state 54
    ComparisonExpr      go to state 55
    AdditionExpr        go to state 56
    MultiplicationExpr  go to state 57
    UnaryExpr           go to state 58
    unary_op            go to state 59
    PrimaryExpr         go to state 60
    Operand             go to state 61
    ConversionExpr      go to state 62
    Literal             go to state 63


State 31

  100 Literal: ENDL .

    $default  reduce using rule 100 (Literal)


State 32

   40 DeclarationStmt: VARIABLE_T . IDENT '=' Expression
   41                | VARIABLE_T . IDENT

    IDENT  shift, and go to state 72


State 33

   96 Literal: INT_LIT .

    $default  reduce using rule 96 (Literal)


State 34

   97 Literal: FLOAT_LIT .

    $default  reduce using rule 97 (Literal)


State 35

   99 Literal: STR_LIT .

    $default  reduce using rule 99 (Literal)


State 36

   92 Operand: IDENT .
   93        | IDENT . '(' ')'

    '('  shift, and go to state 73

    $default  reduce using rule 92 (Operand)


State 37

   98 Literal: BOOL_LIT .

    $default  reduce using rule 98 (Literal)


State 38

   26 Statement: ';' .

    $default  reduce using rule 26 (Statement)


State 39

   94 Operand: '(' . Expression ')'
   95 ConversionExpr: '(' . Type ')' Expression

    INT        shift, and go to state 74
    FLOAT      shift, and go to state 75
    STRING     shift, and go to state 76
    BOOL       shift, and go to state 77
    ADD        shift, and go to state 26
    SUB        shift, and go to state 27
    NOT        shift, and go to state 28
    ENDL       shift, and go to state 31
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    STR_LIT    shift, and go to state 35
    IDENT      shift, and go to state 36
    BOOL_LIT   shift, and go to state 37
    '('        shift, and go to state 39

    Expression          go to state 78
    LogicalORExpr       go to state 53
    LogicalANDExpr      go to state 54
    ComparisonExpr      go to state 55
    AdditionExpr        go to state 56
    MultiplicationExpr  go to state 57
    UnaryExpr           go to state 58
    unary_op            go to state 59
    Type                go to state 79
    PrimaryExpr         go to state 60
    Operand             go to state 61
    ConversionExpr      go to state 62
    Literal             go to state 63


State 40

   43 Block: '{' . $@4 StatementList '}'

    $default  reduce using rule 42 ($@4)

    $@4  go to state 80


State 41

   15 FuncBlock: '{' StatementList . RETURNExpr ';' '}'
   16          | '{' StatementList . '}'

    RETURN  shift, and go to state 81
    '}'     shift, and go to state 82

    RETURNExpr  go to state 83


State 42

   18 StatementList: Statement . StatementList
   19              | Statement .

    COUT        shift, and go to state 25
    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    NOT         shift, and go to state 28
    IF          shift, and go to state 29
    FOR         shift, and go to state 30
    ENDL        shift, and go to state 31
    VARIABLE_T  shift, and go to state 32
    INT_LIT     shift, and go to state 33
    FLOAT_LIT   shift, and go to state 34
    STR_LIT     shift, and go to state 35
    IDENT       shift, and go to state 36
    BOOL_LIT    shift, and go to state 37
    ';'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40

    $default  reduce using rule 19 (StatementList)

    StatementList       go to state 84
    Statement           go to state 42
    SimpleStmt          go to state 43
    AssignmentStmt      go to state 44
    ExpressionStmt      go to state 45
    IncDecStmt          go to state 46
    DeclarationStmt     go to state 47
    Block               go to state 48
    CoutStmt            go to state 49
    IFStmt              go to state 50
    FORStmt             go to state 51
    Expression          go to state 52
    LogicalORExpr       go to state 53
    LogicalANDExpr      go to state 54
    ComparisonExpr      go to state 55
    AdditionExpr        go to state 56
    MultiplicationExpr  go to state 57
    UnaryExpr           go to state 58
    unary_op            go to state 59
    PrimaryExpr         go to state 60
    Operand             go to state 61
    ConversionExpr      go to state 62
    Literal             go to state 63


State 43

   21 Statement: SimpleStmt . ';'

    ';'  shift, and go to state 85


State 44

   27 SimpleStmt: AssignmentStmt .

    $default  reduce using rule 27 (SimpleStmt)


State 45

   28 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 28 (SimpleStmt)


State 46

   29 SimpleStmt: IncDecStmt .

    $default  reduce using rule 29 (SimpleStmt)


State 47

   20 Statement: DeclarationStmt . ';'

    ';'  shift, and go to state 86


State 48

   22 Statement: Block . ';'

    ';'  shift, and go to state 87


State 49

   23 Statement: CoutStmt . ';'

    ';'  shift, and go to state 88


State 50

   24 Statement: IFStmt . ';'

    ';'  shift, and go to state 89


State 51

   25 Statement: FORStmt . ';'

    ';'  shift, and go to state 90


State 52

   30 AssignmentStmt: Expression . assign_op Expression
   37 ExpressionStmt: Expression .
   38 IncDecStmt: Expression . INC_ASSIGN
   39           | Expression . DEC_ASSIGN

    VAL_ASSIGN  shift, and go to state 91
    ADD_ASSIGN  shift, and go to state 92
    SUB_ASSIGN  shift, and go to state 93
    MUL_ASSIGN  shift, and go to state 94
    DIV_ASSIGN  shift, and go to state 95
    REM_ASSIGN  shift, and go to state 96
    INC_ASSIGN  shift, and go to state 97
    DEC_ASSIGN  shift, and go to state 98

    $default  reduce using rule 37 (ExpressionStmt)

    assign_op  go to state 99


State 53

   57 Expression: LogicalORExpr .

    $default  reduce using rule 57 (Expression)


State 54

   58 LogicalORExpr: LogicalANDExpr . LOR LogicalANDExpr
   59              | LogicalANDExpr .

    LOR  shift, and go to state 100

    LOR       [reduce using rule 59 (LogicalORExpr)]
    $default  reduce using rule 59 (LogicalORExpr)


State 55

   60 LogicalANDExpr: ComparisonExpr . LAN ComparisonExpr
   61               | ComparisonExpr .

    LAN  shift, and go to state 101

    LAN       [reduce using rule 61 (LogicalANDExpr)]
    $default  reduce using rule 61 (LogicalANDExpr)


State 56

   62 ComparisonExpr: AdditionExpr . cmp_op AdditionExpr
   63               | AdditionExpr .
   65 AdditionExpr: AdditionExpr . add_op MultiplicationExpr

    ADD  shift, and go to state 102
    SUB  shift, and go to state 103
    GTR  shift, and go to state 104
    LES  shift, and go to state 105
    GEQ  shift, and go to state 106
    LEQ  shift, and go to state 107
    EQL  shift, and go to state 108
    NEQ  shift, and go to state 109

    ADD       [reduce using rule 63 (ComparisonExpr)]
    SUB       [reduce using rule 63 (ComparisonExpr)]
    GTR       [reduce using rule 63 (ComparisonExpr)]
    LES       [reduce using rule 63 (ComparisonExpr)]
    GEQ       [reduce using rule 63 (ComparisonExpr)]
    LEQ       [reduce using rule 63 (ComparisonExpr)]
    EQL       [reduce using rule 63 (ComparisonExpr)]
    NEQ       [reduce using rule 63 (ComparisonExpr)]
    $default  reduce using rule 63 (ComparisonExpr)

    cmp_op  go to state 110
    add_op  go to state 111


State 57

   64 AdditionExpr: MultiplicationExpr . add_op MultiplicationExpr
   66             | MultiplicationExpr .

    ADD  shift, and go to state 102
    SUB  shift, and go to state 103

    ADD       [reduce using rule 66 (AdditionExpr)]
    SUB       [reduce using rule 66 (AdditionExpr)]
    $default  reduce using rule 66 (AdditionExpr)

    add_op  go to state 112


State 58

   67 MultiplicationExpr: UnaryExpr . mul_op UnaryExpr
   68                   | UnaryExpr .

    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    REM  shift, and go to state 115

    MUL       [reduce using rule 68 (MultiplicationExpr)]
    DIV       [reduce using rule 68 (MultiplicationExpr)]
    REM       [reduce using rule 68 (MultiplicationExpr)]
    $default  reduce using rule 68 (MultiplicationExpr)

    mul_op  go to state 116


State 59

   69 UnaryExpr: unary_op . UnaryExpr

    ADD        shift, and go to state 26
    SUB        shift, and go to state 27
    NOT        shift, and go to state 28
    ENDL       shift, and go to state 31
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    STR_LIT    shift, and go to state 35
    IDENT      shift, and go to state 36
    BOOL_LIT   shift, and go to state 37
    '('        shift, and go to state 39

    UnaryExpr       go to state 117
    unary_op        go to state 59
    PrimaryExpr     go to state 60
    Operand         go to state 61
    ConversionExpr  go to state 62
    Literal         go to state 63


State 60

   70 UnaryExpr: PrimaryExpr .

    $default  reduce using rule 70 (UnaryExpr)


State 61

   89 PrimaryExpr: Operand .

    $default  reduce using rule 89 (PrimaryExpr)


State 62

   90 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 90 (PrimaryExpr)


State 63

   91 Operand: Literal .

    $default  reduce using rule 91 (Operand)


State 64

   44 CoutStmt: COUT SHL . PrintableList

    ADD        shift, and go to state 26
    SUB        shift, and go to state 27
    NOT        shift, and go to state 28
    ENDL       shift, and go to state 31
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    STR_LIT    shift, and go to state 35
    IDENT      shift, and go to state 36
    BOOL_LIT   shift, and go to state 37
    '('        shift, and go to state 39

    PrintableList       go to state 118
    Printable           go to state 119
    Expression          go to state 120
    LogicalORExpr       go to state 53
    LogicalANDExpr      go to state 54
    ComparisonExpr      go to state 55
    AdditionExpr        go to state 56
    MultiplicationExpr  go to state 57
    UnaryExpr           go to state 58
    unary_op            go to state 59
    PrimaryExpr         go to state 60
    Operand             go to state 61
    ConversionExpr      go to state 62
    Literal             go to state 63


State 65

   48 IFStmt: IF Condition . Block
   49       | IF Condition . Block ELSE Block
   50       | IF Condition . Block ELSE IFStmt

    '{'  shift, and go to state 40

    Block  go to state 121


State 66

   51 Condition: Expression .

    $default  reduce using rule 51 (Condition)


State 67

   55 InitStmt: SimpleStmt .

    $default  reduce using rule 55 (InitStmt)


State 68

   52 FORStmt: FOR Condition . Block

    '{'  shift, and go to state 40

    Block  go to state 122


State 69

   53 FORStmt: FOR ForClause . Block

    '{'  shift, and go to state 40

    Block  go to state 123


State 70

   54 ForClause: InitStmt . ';' Condition ';' PostStmt

    ';'  shift, and go to state 124


State 71

   30 AssignmentStmt: Expression . assign_op Expression
   37 ExpressionStmt: Expression .
   38 IncDecStmt: Expression . INC_ASSIGN
   39           | Expression . DEC_ASSIGN
   51 Condition: Expression .

    VAL_ASSIGN  shift, and go to state 91
    ADD_ASSIGN  shift, and go to state 92
    SUB_ASSIGN  shift, and go to state 93
    MUL_ASSIGN  shift, and go to state 94
    DIV_ASSIGN  shift, and go to state 95
    REM_ASSIGN  shift, and go to state 96
    INC_ASSIGN  shift, and go to state 97
    DEC_ASSIGN  shift, and go to state 98

    '{'       reduce using rule 51 (Condition)
    $default  reduce using rule 37 (ExpressionStmt)

    assign_op  go to state 99


State 72

   40 DeclarationStmt: VARIABLE_T IDENT . '=' Expression
   41                | VARIABLE_T IDENT .

    '='  shift, and go to state 125

    $default  reduce using rule 41 (DeclarationStmt)


State 73

   93 Operand: IDENT '(' . ')'

    ')'  shift, and go to state 126


State 74

   85 Type: INT .

    $default  reduce using rule 85 (Type)


State 75

   86 Type: FLOAT .

    $default  reduce using rule 86 (Type)


State 76

   87 Type: STRING .

    $default  reduce using rule 87 (Type)


State 77

   88 Type: BOOL .

    $default  reduce using rule 88 (Type)


State 78

   94 Operand: '(' Expression . ')'

    ')'  shift, and go to state 127


State 79

   95 ConversionExpr: '(' Type . ')' Expression

    ')'  shift, and go to state 128


State 80

   43 Block: '{' $@4 . StatementList '}'

    COUT        shift, and go to state 25
    ADD         shift, and go to state 26
    SUB         shift, and go to state 27
    NOT         shift, and go to state 28
    IF          shift, and go to state 29
    FOR         shift, and go to state 30
    ENDL        shift, and go to state 31
    VARIABLE_T  shift, and go to state 32
    INT_LIT     shift, and go to state 33
    FLOAT_LIT   shift, and go to state 34
    STR_LIT     shift, and go to state 35
    IDENT       shift, and go to state 36
    BOOL_LIT    shift, and go to state 37
    ';'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40

    StatementList       go to state 129
    Statement           go to state 42
    SimpleStmt          go to state 43
    AssignmentStmt      go to state 44
    ExpressionStmt      go to state 45
    IncDecStmt          go to state 46
    DeclarationStmt     go to state 47
    Block               go to state 48
    CoutStmt            go to state 49
    IFStmt              go to state 50
    FORStmt             go to state 51
    Expression          go to state 52
    LogicalORExpr       go to state 53
    LogicalANDExpr      go to state 54
    ComparisonExpr      go to state 55
    AdditionExpr        go to state 56
    MultiplicationExpr  go to state 57
    UnaryExpr           go to state 58
    unary_op            go to state 59
    PrimaryExpr         go to state 60
    Operand             go to state 61
    ConversionExpr      go to state 62
    Literal             go to state 63


State 81

   17 RETURNExpr: RETURN . Expression

    ADD        shift, and go to state 26
    SUB        shift, and go to state 27
    NOT        shift, and go to state 28
    ENDL       shift, and go to state 31
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    STR_LIT    shift, and go to state 35
    IDENT      shift, and go to state 36
    BOOL_LIT   shift, and go to state 37
    '('        shift, and go to state 39

    Expression          go to state 130
    LogicalORExpr       go to state 53
    LogicalANDExpr      go to state 54
    ComparisonExpr      go to state 55
    AdditionExpr        go to state 56
    MultiplicationExpr  go to state 57
    UnaryExpr           go to state 58
    unary_op            go to state 59
    PrimaryExpr         go to state 60
    Operand             go to state 61
    ConversionExpr      go to state 62
    Literal             go to state 63


State 82

   16 FuncBlock: '{' StatementList '}' .

    $default  reduce using rule 16 (FuncBlock)


State 83

   15 FuncBlock: '{' StatementList RETURNExpr . ';' '}'

    ';'  shift, and go to state 131


State 84

   18 StatementList: Statement StatementList .

    $default  reduce using rule 18 (StatementList)


State 85

   21 Statement: SimpleStmt ';' .

    $default  reduce using rule 21 (Statement)


State 86

   20 Statement: DeclarationStmt ';' .

    $default  reduce using rule 20 (Statement)


State 87

   22 Statement: Block ';' .

    $default  reduce using rule 22 (Statement)


State 88

   23 Statement: CoutStmt ';' .

    $default  reduce using rule 23 (Statement)


State 89

   24 Statement: IFStmt ';' .

    $default  reduce using rule 24 (Statement)


State 90

   25 Statement: FORStmt ';' .

    $default  reduce using rule 25 (Statement)


State 91

   31 assign_op: VAL_ASSIGN .

    $default  reduce using rule 31 (assign_op)


State 92

   32 assign_op: ADD_ASSIGN .

    $default  reduce using rule 32 (assign_op)


State 93

   33 assign_op: SUB_ASSIGN .

    $default  reduce using rule 33 (assign_op)


State 94

   34 assign_op: MUL_ASSIGN .

    $default  reduce using rule 34 (assign_op)


State 95

   35 assign_op: DIV_ASSIGN .

    $default  reduce using rule 35 (assign_op)


State 96

   36 assign_op: REM_ASSIGN .

    $default  reduce using rule 36 (assign_op)


State 97

   38 IncDecStmt: Expression INC_ASSIGN .

    $default  reduce using rule 38 (IncDecStmt)


State 98

   39 IncDecStmt: Expression DEC_ASSIGN .

    $default  reduce using rule 39 (IncDecStmt)


State 99

   30 AssignmentStmt: Expression assign_op . Expression

    ADD        shift, and go to state 26
    SUB        shift, and go to state 27
    NOT        shift, and go to state 28
    ENDL       shift, and go to state 31
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    STR_LIT    shift, and go to state 35
    IDENT      shift, and go to state 36
    BOOL_LIT   shift, and go to state 37
    '('        shift, and go to state 39

    Expression          go to state 132
    LogicalORExpr       go to state 53
    LogicalANDExpr      go to state 54
    ComparisonExpr      go to state 55
    AdditionExpr        go to state 56
    MultiplicationExpr  go to state 57
    UnaryExpr           go to state 58
    unary_op            go to state 59
    PrimaryExpr         go to state 60
    Operand             go to state 61
    ConversionExpr      go to state 62
    Literal             go to state 63


State 100

   58 LogicalORExpr: LogicalANDExpr LOR . LogicalANDExpr

    ADD        shift, and go to state 26
    SUB        shift, and go to state 27
    NOT        shift, and go to state 28
    ENDL       shift, and go to state 31
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    STR_LIT    shift, and go to state 35
    IDENT      shift, and go to state 36
    BOOL_LIT   shift, and go to state 37
    '('        shift, and go to state 39

    LogicalANDExpr      go to state 133
    ComparisonExpr      go to state 55
    AdditionExpr        go to state 56
    MultiplicationExpr  go to state 57
    UnaryExpr           go to state 58
    unary_op            go to state 59
    PrimaryExpr         go to state 60
    Operand             go to state 61
    ConversionExpr      go to state 62
    Literal             go to state 63


State 101

   60 LogicalANDExpr: ComparisonExpr LAN . ComparisonExpr

    ADD        shift, and go to state 26
    SUB        shift, and go to state 27
    NOT        shift, and go to state 28
    ENDL       shift, and go to state 31
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    STR_LIT    shift, and go to state 35
    IDENT      shift, and go to state 36
    BOOL_LIT   shift, and go to state 37
    '('        shift, and go to state 39

    ComparisonExpr      go to state 134
    AdditionExpr        go to state 56
    MultiplicationExpr  go to state 57
    UnaryExpr           go to state 58
    unary_op            go to state 59
    PrimaryExpr         go to state 60
    Operand             go to state 61
    ConversionExpr      go to state 62
    Literal             go to state 63


State 102

   77 add_op: ADD .

    $default  reduce using rule 77 (add_op)


State 103

   78 add_op: SUB .

    $default  reduce using rule 78 (add_op)


State 104

   75 cmp_op: GTR .

    $default  reduce using rule 75 (cmp_op)


State 105

   73 cmp_op: LES .

    $default  reduce using rule 73 (cmp_op)


State 106

   76 cmp_op: GEQ .

    $default  reduce using rule 76 (cmp_op)


State 107

   74 cmp_op: LEQ .

    $default  reduce using rule 74 (cmp_op)


State 108

   71 cmp_op: EQL .

    $default  reduce using rule 71 (cmp_op)


State 109

   72 cmp_op: NEQ .

    $default  reduce using rule 72 (cmp_op)


State 110

   62 ComparisonExpr: AdditionExpr cmp_op . AdditionExpr

    ADD        shift, and go to state 26
    SUB        shift, and go to state 27
    NOT        shift, and go to state 28
    ENDL       shift, and go to state 31
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    STR_LIT    shift, and go to state 35
    IDENT      shift, and go to state 36
    BOOL_LIT   shift, and go to state 37
    '('        shift, and go to state 39

    AdditionExpr        go to state 135
    MultiplicationExpr  go to state 57
    UnaryExpr           go to state 58
    unary_op            go to state 59
    PrimaryExpr         go to state 60
    Operand             go to state 61
    ConversionExpr      go to state 62
    Literal             go to state 63


State 111

   65 AdditionExpr: AdditionExpr add_op . MultiplicationExpr

    ADD        shift, and go to state 26
    SUB        shift, and go to state 27
    NOT        shift, and go to state 28
    ENDL       shift, and go to state 31
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    STR_LIT    shift, and go to state 35
    IDENT      shift, and go to state 36
    BOOL_LIT   shift, and go to state 37
    '('        shift, and go to state 39

    MultiplicationExpr  go to state 136
    UnaryExpr           go to state 58
    unary_op            go to state 59
    PrimaryExpr         go to state 60
    Operand             go to state 61
    ConversionExpr      go to state 62
    Literal             go to state 63


State 112

   64 AdditionExpr: MultiplicationExpr add_op . MultiplicationExpr

    ADD        shift, and go to state 26
    SUB        shift, and go to state 27
    NOT        shift, and go to state 28
    ENDL       shift, and go to state 31
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    STR_LIT    shift, and go to state 35
    IDENT      shift, and go to state 36
    BOOL_LIT   shift, and go to state 37
    '('        shift, and go to state 39

    MultiplicationExpr  go to state 137
    UnaryExpr           go to state 58
    unary_op            go to state 59
    PrimaryExpr         go to state 60
    Operand             go to state 61
    ConversionExpr      go to state 62
    Literal             go to state 63


State 113

   79 mul_op: MUL .

    $default  reduce using rule 79 (mul_op)


State 114

   80 mul_op: DIV .

    $default  reduce using rule 80 (mul_op)


State 115

   81 mul_op: REM .

    $default  reduce using rule 81 (mul_op)


State 116

   67 MultiplicationExpr: UnaryExpr mul_op . UnaryExpr

    ADD        shift, and go to state 26
    SUB        shift, and go to state 27
    NOT        shift, and go to state 28
    ENDL       shift, and go to state 31
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    STR_LIT    shift, and go to state 35
    IDENT      shift, and go to state 36
    BOOL_LIT   shift, and go to state 37
    '('        shift, and go to state 39

    UnaryExpr       go to state 138
    unary_op        go to state 59
    PrimaryExpr     go to state 60
    Operand         go to state 61
    ConversionExpr  go to state 62
    Literal         go to state 63


State 117

   69 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 69 (UnaryExpr)


State 118

   44 CoutStmt: COUT SHL PrintableList .
   46 PrintableList: PrintableList . SHL Printable

    SHL  shift, and go to state 139

    $default  reduce using rule 44 (CoutStmt)


State 119

   45 PrintableList: Printable .

    $default  reduce using rule 45 (PrintableList)


State 120

   47 Printable: Expression .

    $default  reduce using rule 47 (Printable)


State 121

   48 IFStmt: IF Condition Block .
   49       | IF Condition Block . ELSE Block
   50       | IF Condition Block . ELSE IFStmt

    ELSE  shift, and go to state 140

    $default  reduce using rule 48 (IFStmt)


State 122

   52 FORStmt: FOR Condition Block .

    $default  reduce using rule 52 (FORStmt)


State 123

   53 FORStmt: FOR ForClause Block .

    $default  reduce using rule 53 (FORStmt)


State 124

   54 ForClause: InitStmt ';' . Condition ';' PostStmt

    ADD        shift, and go to state 26
    SUB        shift, and go to state 27
    NOT        shift, and go to state 28
    ENDL       shift, and go to state 31
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    STR_LIT    shift, and go to state 35
    IDENT      shift, and go to state 36
    BOOL_LIT   shift, and go to state 37
    '('        shift, and go to state 39

    Condition           go to state 141
    Expression          go to state 66
    LogicalORExpr       go to state 53
    LogicalANDExpr      go to state 54
    ComparisonExpr      go to state 55
    AdditionExpr        go to state 56
    MultiplicationExpr  go to state 57
    UnaryExpr           go to state 58
    unary_op            go to state 59
    PrimaryExpr         go to state 60
    Operand             go to state 61
    ConversionExpr      go to state 62
    Literal             go to state 63


State 125

   40 DeclarationStmt: VARIABLE_T IDENT '=' . Expression

    ADD        shift, and go to state 26
    SUB        shift, and go to state 27
    NOT        shift, and go to state 28
    ENDL       shift, and go to state 31
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    STR_LIT    shift, and go to state 35
    IDENT      shift, and go to state 36
    BOOL_LIT   shift, and go to state 37
    '('        shift, and go to state 39

    Expression          go to state 142
    LogicalORExpr       go to state 53
    LogicalANDExpr      go to state 54
    ComparisonExpr      go to state 55
    AdditionExpr        go to state 56
    MultiplicationExpr  go to state 57
    UnaryExpr           go to state 58
    unary_op            go to state 59
    PrimaryExpr         go to state 60
    Operand             go to state 61
    ConversionExpr      go to state 62
    Literal             go to state 63


State 126

   93 Operand: IDENT '(' ')' .

    $default  reduce using rule 93 (Operand)


State 127

   94 Operand: '(' Expression ')' .

    $default  reduce using rule 94 (Operand)


State 128

   95 ConversionExpr: '(' Type ')' . Expression

    ADD        shift, and go to state 26
    SUB        shift, and go to state 27
    NOT        shift, and go to state 28
    ENDL       shift, and go to state 31
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    STR_LIT    shift, and go to state 35
    IDENT      shift, and go to state 36
    BOOL_LIT   shift, and go to state 37
    '('        shift, and go to state 39

    Expression          go to state 143
    LogicalORExpr       go to state 53
    LogicalANDExpr      go to state 54
    ComparisonExpr      go to state 55
    AdditionExpr        go to state 56
    MultiplicationExpr  go to state 57
    UnaryExpr           go to state 58
    unary_op            go to state 59
    PrimaryExpr         go to state 60
    Operand             go to state 61
    ConversionExpr      go to state 62
    Literal             go to state 63


State 129

   43 Block: '{' $@4 StatementList . '}'

    '}'  shift, and go to state 144


State 130

   17 RETURNExpr: RETURN Expression .

    $default  reduce using rule 17 (RETURNExpr)


State 131

   15 FuncBlock: '{' StatementList RETURNExpr ';' . '}'

    '}'  shift, and go to state 145


State 132

   30 AssignmentStmt: Expression assign_op Expression .

    $default  reduce using rule 30 (AssignmentStmt)


State 133

   58 LogicalORExpr: LogicalANDExpr LOR LogicalANDExpr .

    $default  reduce using rule 58 (LogicalORExpr)


State 134

   60 LogicalANDExpr: ComparisonExpr LAN ComparisonExpr .

    $default  reduce using rule 60 (LogicalANDExpr)


State 135

   62 ComparisonExpr: AdditionExpr cmp_op AdditionExpr .
   65 AdditionExpr: AdditionExpr . add_op MultiplicationExpr

    ADD  shift, and go to state 102
    SUB  shift, and go to state 103

    ADD       [reduce using rule 62 (ComparisonExpr)]
    SUB       [reduce using rule 62 (ComparisonExpr)]
    $default  reduce using rule 62 (ComparisonExpr)

    add_op  go to state 111


State 136

   65 AdditionExpr: AdditionExpr add_op MultiplicationExpr .

    $default  reduce using rule 65 (AdditionExpr)


State 137

   64 AdditionExpr: MultiplicationExpr add_op MultiplicationExpr .

    $default  reduce using rule 64 (AdditionExpr)


State 138

   67 MultiplicationExpr: UnaryExpr mul_op UnaryExpr .

    $default  reduce using rule 67 (MultiplicationExpr)


State 139

   46 PrintableList: PrintableList SHL . Printable

    ADD        shift, and go to state 26
    SUB        shift, and go to state 27
    NOT        shift, and go to state 28
    ENDL       shift, and go to state 31
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    STR_LIT    shift, and go to state 35
    IDENT      shift, and go to state 36
    BOOL_LIT   shift, and go to state 37
    '('        shift, and go to state 39

    Printable           go to state 146
    Expression          go to state 120
    LogicalORExpr       go to state 53
    LogicalANDExpr      go to state 54
    ComparisonExpr      go to state 55
    AdditionExpr        go to state 56
    MultiplicationExpr  go to state 57
    UnaryExpr           go to state 58
    unary_op            go to state 59
    PrimaryExpr         go to state 60
    Operand             go to state 61
    ConversionExpr      go to state 62
    Literal             go to state 63


State 140

   49 IFStmt: IF Condition Block ELSE . Block
   50       | IF Condition Block ELSE . IFStmt

    IF   shift, and go to state 29
    '{'  shift, and go to state 40

    Block   go to state 147
    IFStmt  go to state 148


State 141

   54 ForClause: InitStmt ';' Condition . ';' PostStmt

    ';'  shift, and go to state 149


State 142

   40 DeclarationStmt: VARIABLE_T IDENT '=' Expression .

    $default  reduce using rule 40 (DeclarationStmt)


State 143

   95 ConversionExpr: '(' Type ')' Expression .

    $default  reduce using rule 95 (ConversionExpr)


State 144

   43 Block: '{' $@4 StatementList '}' .

    $default  reduce using rule 43 (Block)


State 145

   15 FuncBlock: '{' StatementList RETURNExpr ';' '}' .

    $default  reduce using rule 15 (FuncBlock)


State 146

   46 PrintableList: PrintableList SHL Printable .

    $default  reduce using rule 46 (PrintableList)


State 147

   49 IFStmt: IF Condition Block ELSE Block .

    $default  reduce using rule 49 (IFStmt)


State 148

   50 IFStmt: IF Condition Block ELSE IFStmt .

    $default  reduce using rule 50 (IFStmt)


State 149

   54 ForClause: InitStmt ';' Condition ';' . PostStmt

    ADD        shift, and go to state 26
    SUB        shift, and go to state 27
    NOT        shift, and go to state 28
    ENDL       shift, and go to state 31
    INT_LIT    shift, and go to state 33
    FLOAT_LIT  shift, and go to state 34
    STR_LIT    shift, and go to state 35
    IDENT      shift, and go to state 36
    BOOL_LIT   shift, and go to state 37
    '('        shift, and go to state 39

    SimpleStmt          go to state 150
    AssignmentStmt      go to state 44
    ExpressionStmt      go to state 45
    IncDecStmt          go to state 46
    PostStmt            go to state 151
    Expression          go to state 52
    LogicalORExpr       go to state 53
    LogicalANDExpr      go to state 54
    ComparisonExpr      go to state 55
    AdditionExpr        go to state 56
    MultiplicationExpr  go to state 57
    UnaryExpr           go to state 58
    unary_op            go to state 59
    PrimaryExpr         go to state 60
    Operand             go to state 61
    ConversionExpr      go to state 62
    Literal             go to state 63


State 150

   56 PostStmt: SimpleStmt .

    $default  reduce using rule 56 (PostStmt)


State 151

   54 ForClause: InitStmt ';' Condition ';' PostStmt .

    $default  reduce using rule 54 (ForClause)
