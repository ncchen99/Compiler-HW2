Terminals unused in grammar

    SHR
    BAN
    BOR
    BNT
    BXO
    ADD
    SUB
    MUL
    DIV
    REM
    NOT
    GTR
    LES
    VAL_ASSIGN
    BAN_ASSIGN
    BOR_ASSIGN
    BXO_ASSIGN
    SHR_ASSIGN
    SHL_ASSIGN
    WHILE
    BREAK
    CONTINUE
    BOOL_LIT


State 46 conflicts: 1 shift/reduce
State 61 conflicts: 2 shift/reduce


Grammar

    0 $accept: Program $end

    1 $@1: %empty

    2 Program: $@1 GlobalStatementList

    3 GlobalStatementList: GlobalStatementList GlobalStatement
    4                    | GlobalStatement

    5 GlobalStatement: FunctionDeclStmt
    6                | ';'

    7 $@2: %empty

    8 $@3: %empty

    9 FunctionDeclStmt: VARIABLE_T IDENT $@2 '(' ParameterList ')' $@3 FuncBlock

   10 ParameterList: Parameter
   11              | ParameterList ',' Parameter
   12              | %empty

   13 Parameter: VARIABLE_T IDENT
   14          | VARIABLE_T IDENT '[' ']'

   15 FuncBlock: '{' StatementList RETURNExpr ';' '}'

   16 RETURNExpr: RETURN Expression
   17           | %empty

   18 StatementList: Statement StatementList
   19              | Statement

   20 Statement: DeclarationStmt ';'
   21          | SimpleStmt ';'
   22          | Block ';'
   23          | CoutStmt ';'
   24          | IFStmt ';'
   25          | FORStmt ';'
   26          | ';'

   27 SimpleStmt: AssignmentStmt
   28           | ExpressionStmt
   29           | IncDecStmt

   30 AssignmentStmt: Expression assign_op Expression

   31 assign_op: '='
   32          | ADD_ASSIGN
   33          | SUB_ASSIGN
   34          | MUL_ASSIGN
   35          | DIV_ASSIGN
   36          | REM_ASSIGN

   37 ExpressionStmt: Expression

   38 IncDecStmt: Expression INC_ASSIGN
   39           | Expression DEC_ASSIGN

   40 DeclarationStmt: VARIABLE_T IDENT '=' Expression
   41                | VARIABLE_T IDENT

   42 $@4: %empty

   43 Block: '{' $@4 StatementList '}'

   44 CoutStmt: COUT SHL PrintableList ';'

   45 PrintableList: Printable
   46              | PrintableList SHL Printable

   47 Printable: STR_LIT
   48          | ENDL
   49          | Expression

   50 IFStmt: IF Condition Block
   51       | IF Condition Block ELSE Block
   52       | IF Condition Block ELSE IFStmt

   53 Condition: Expression

   54 FORStmt: FOR Condition Block
   55        | FOR ForClause Block

   56 ForClause: InitStmt ';' Condition ';' PostStmt

   57 InitStmt: SimpleStmt

   58 PostStmt: SimpleStmt

   59 Expression: LogicalORExpr

   60 FuncPara: Expression ',' FuncPara
   61         | Expression

   62 LogicalORExpr: LogicalANDExpr LOR LogicalANDExpr
   63              | LogicalANDExpr

   64 LogicalANDExpr: ComparisonExpr LAN ComparisonExpr
   65               | ComparisonExpr

   66 ComparisonExpr: AdditionExpr cmp_op AdditionExpr
   67               | AdditionExpr

   68 AdditionExpr: MultiplicationExpr add_op MultiplicationExpr
   69             | AdditionExpr add_op MultiplicationExpr
   70             | MultiplicationExpr

   71 MultiplicationExpr: UnaryExpr mul_op UnaryExpr
   72                   | UnaryExpr

   73 UnaryExpr: unary_op UnaryExpr
   74          | PrimaryExpr

   75 cmp_op: EQL
   76       | NEQ
   77       | '<'
   78       | LEQ
   79       | '>'
   80       | GEQ

   81 add_op: '+'
   82       | '-'

   83 mul_op: '*'
   84       | '/'
   85       | '%'

   86 unary_op: '+'
   87         | '-'
   88         | '!'

   89 Type: INT
   90     | FLOAT
   91     | STRING
   92     | BOOL

   93 PrimaryExpr: Operand
   94            | ConversionExpr

   95 Operand: Literal
   96        | IDENT
   97        | IDENT '(' ')'
   98        | IDENT '(' FuncPara ')'
   99        | '(' Expression ')'

  100 ConversionExpr: Type '(' Expression ')'

  101 Literal: INT_LIT
  102        | FLOAT_LIT
  103        | TRUE
  104        | FALSE
  105        | '"' STR_LIT '"'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 88
    '"' (34) 105
    '%' (37) 85
    '(' (40) 9 97 98 99 100
    ')' (41) 9 97 98 99 100
    '*' (42) 83
    '+' (43) 81 86
    ',' (44) 11 60
    '-' (45) 82 87
    '/' (47) 84
    ';' (59) 6 15 20 21 22 23 24 25 26 44 56
    '<' (60) 77
    '=' (61) 31 40
    '>' (62) 79
    '[' (91) 14
    ']' (93) 14
    '{' (123) 15 43
    '}' (125) 15 43
    error (256)
    COUT (258) 44
    INT (259) 89
    FLOAT (260) 90
    STRING (261) 91
    BOOL (262) 92
    TRUE (263) 103
    FALSE (264) 104
    SHR (265)
    SHL (266) 44 46
    BAN (267)
    BOR (268)
    BNT (269)
    BXO (270)
    ADD (271)
    SUB (272)
    MUL (273)
    DIV (274)
    REM (275)
    NOT (276)
    GTR (277)
    LES (278)
    GEQ (279) 80
    LEQ (280) 78
    EQL (281) 75
    NEQ (282) 76
    LAN (283) 64
    LOR (284) 62
    VAL_ASSIGN (285)
    ADD_ASSIGN (286) 32
    SUB_ASSIGN (287) 33
    MUL_ASSIGN (288) 34
    DIV_ASSIGN (289) 35
    REM_ASSIGN (290) 36
    BAN_ASSIGN (291)
    BOR_ASSIGN (292)
    BXO_ASSIGN (293)
    SHR_ASSIGN (294)
    SHL_ASSIGN (295)
    INC_ASSIGN (296) 38
    DEC_ASSIGN (297) 39
    IF (298) 50 51 52
    ELSE (299) 51 52
    FOR (300) 54 55
    WHILE (301)
    RETURN (302) 16
    BREAK (303)
    CONTINUE (304)
    ENDL (305) 48
    VARIABLE_T <var_type> (306) 9 13 14 40 41
    INT_LIT <i_var> (307) 101
    FLOAT_LIT <f_var> (308) 102
    STR_LIT <s_var> (309) 47 105
    IDENT <s_var> (310) 9 13 14 40 41 96 97 98
    BOOL_LIT <b_var> (311)


Nonterminals, with rules where they appear

    $accept (75)
        on left: 0
    Program (76)
        on left: 2
        on right: 0
    $@1 (77)
        on left: 1
        on right: 2
    GlobalStatementList (78)
        on left: 3 4
        on right: 2 3
    GlobalStatement (79)
        on left: 5 6
        on right: 3 4
    FunctionDeclStmt (80)
        on left: 9
        on right: 5
    $@2 (81)
        on left: 7
        on right: 9
    $@3 (82)
        on left: 8
        on right: 9
    ParameterList (83)
        on left: 10 11 12
        on right: 9 11
    Parameter (84)
        on left: 13 14
        on right: 10 11
    FuncBlock (85)
        on left: 15
        on right: 9
    RETURNExpr (86)
        on left: 16 17
        on right: 15
    StatementList (87)
        on left: 18 19
        on right: 15 18 43
    Statement (88)
        on left: 20 21 22 23 24 25 26
        on right: 18 19
    SimpleStmt (89)
        on left: 27 28 29
        on right: 21 57 58
    AssignmentStmt (90)
        on left: 30
        on right: 27
    assign_op <s_var> (91)
        on left: 31 32 33 34 35 36
        on right: 30
    ExpressionStmt (92)
        on left: 37
        on right: 28
    IncDecStmt (93)
        on left: 38 39
        on right: 29
    DeclarationStmt (94)
        on left: 40 41
        on right: 20
    Block (95)
        on left: 43
        on right: 22 50 51 52 54 55
    $@4 (96)
        on left: 42
        on right: 43
    CoutStmt (97)
        on left: 44
        on right: 23
    PrintableList (98)
        on left: 45 46
        on right: 44 46
    Printable (99)
        on left: 47 48 49
        on right: 45 46
    IFStmt (100)
        on left: 50 51 52
        on right: 24 52
    Condition (101)
        on left: 53
        on right: 50 51 52 54 56
    FORStmt (102)
        on left: 54 55
        on right: 25
    ForClause (103)
        on left: 56
        on right: 55
    InitStmt (104)
        on left: 57
        on right: 56
    PostStmt (105)
        on left: 58
        on right: 56
    Expression <s_var> (106)
        on left: 59
        on right: 16 30 37 38 39 40 49 53 60 61 99 100
    FuncPara (107)
        on left: 60 61
        on right: 60 98
    LogicalORExpr <s_var> (108)
        on left: 62 63
        on right: 59
    LogicalANDExpr <s_var> (109)
        on left: 64 65
        on right: 62 63
    ComparisonExpr <s_var> (110)
        on left: 66 67
        on right: 64 65
    AdditionExpr <s_var> (111)
        on left: 68 69 70
        on right: 66 67 69
    MultiplicationExpr <s_var> (112)
        on left: 71 72
        on right: 68 69 70
    UnaryExpr <s_var> (113)
        on left: 73 74
        on right: 71 72 73
    cmp_op <s_var> (114)
        on left: 75 76 77 78 79 80
        on right: 66
    add_op <s_var> (115)
        on left: 81 82
        on right: 68 69
    mul_op <s_var> (116)
        on left: 83 84 85
        on right: 71
    unary_op <s_var> (117)
        on left: 86 87 88
        on right: 73
    Type <s_var> (118)
        on left: 89 90 91 92
        on right: 100
    PrimaryExpr <s_var> (119)
        on left: 93 94
        on right: 74
    Operand <s_var> (120)
        on left: 95 96 97 98 99
        on right: 93
    ConversionExpr (121)
        on left: 100
        on right: 94
    Literal <s_var> (122)
        on left: 101 102 103 104 105
        on right: 95


State 0

    0 $accept: . Program $end

    $default  reduce using rule 1 ($@1)

    Program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: Program . $end

    $end  shift, and go to state 3


State 2

    2 Program: $@1 . GlobalStatementList

    VARIABLE_T  shift, and go to state 4
    ';'         shift, and go to state 5

    GlobalStatementList  go to state 6
    GlobalStatement      go to state 7
    FunctionDeclStmt     go to state 8


State 3

    0 $accept: Program $end .

    $default  accept


State 4

    9 FunctionDeclStmt: VARIABLE_T . IDENT $@2 '(' ParameterList ')' $@3 FuncBlock

    IDENT  shift, and go to state 9


State 5

    6 GlobalStatement: ';' .

    $default  reduce using rule 6 (GlobalStatement)


State 6

    2 Program: $@1 GlobalStatementList .
    3 GlobalStatementList: GlobalStatementList . GlobalStatement

    VARIABLE_T  shift, and go to state 4
    ';'         shift, and go to state 5

    $default  reduce using rule 2 (Program)

    GlobalStatement   go to state 10
    FunctionDeclStmt  go to state 8


State 7

    4 GlobalStatementList: GlobalStatement .

    $default  reduce using rule 4 (GlobalStatementList)


State 8

    5 GlobalStatement: FunctionDeclStmt .

    $default  reduce using rule 5 (GlobalStatement)


State 9

    9 FunctionDeclStmt: VARIABLE_T IDENT . $@2 '(' ParameterList ')' $@3 FuncBlock

    $default  reduce using rule 7 ($@2)

    $@2  go to state 11


State 10

    3 GlobalStatementList: GlobalStatementList GlobalStatement .

    $default  reduce using rule 3 (GlobalStatementList)


State 11

    9 FunctionDeclStmt: VARIABLE_T IDENT $@2 . '(' ParameterList ')' $@3 FuncBlock

    '('  shift, and go to state 12


State 12

    9 FunctionDeclStmt: VARIABLE_T IDENT $@2 '(' . ParameterList ')' $@3 FuncBlock

    VARIABLE_T  shift, and go to state 13

    $default  reduce using rule 12 (ParameterList)

    ParameterList  go to state 14
    Parameter      go to state 15


State 13

   13 Parameter: VARIABLE_T . IDENT
   14          | VARIABLE_T . IDENT '[' ']'

    IDENT  shift, and go to state 16


State 14

    9 FunctionDeclStmt: VARIABLE_T IDENT $@2 '(' ParameterList . ')' $@3 FuncBlock
   11 ParameterList: ParameterList . ',' Parameter

    ')'  shift, and go to state 17
    ','  shift, and go to state 18


State 15

   10 ParameterList: Parameter .

    $default  reduce using rule 10 (ParameterList)


State 16

   13 Parameter: VARIABLE_T IDENT .
   14          | VARIABLE_T IDENT . '[' ']'

    '['  shift, and go to state 19

    $default  reduce using rule 13 (Parameter)


State 17

    9 FunctionDeclStmt: VARIABLE_T IDENT $@2 '(' ParameterList ')' . $@3 FuncBlock

    $default  reduce using rule 8 ($@3)

    $@3  go to state 20


State 18

   11 ParameterList: ParameterList ',' . Parameter

    VARIABLE_T  shift, and go to state 13

    Parameter  go to state 21


State 19

   14 Parameter: VARIABLE_T IDENT '[' . ']'

    ']'  shift, and go to state 22


State 20

    9 FunctionDeclStmt: VARIABLE_T IDENT $@2 '(' ParameterList ')' $@3 . FuncBlock

    '{'  shift, and go to state 23

    FuncBlock  go to state 24


State 21

   11 ParameterList: ParameterList ',' Parameter .

    $default  reduce using rule 11 (ParameterList)


State 22

   14 Parameter: VARIABLE_T IDENT '[' ']' .

    $default  reduce using rule 14 (Parameter)


State 23

   15 FuncBlock: '{' . StatementList RETURNExpr ';' '}'

    COUT        shift, and go to state 25
    INT         shift, and go to state 26
    FLOAT       shift, and go to state 27
    STRING      shift, and go to state 28
    BOOL        shift, and go to state 29
    TRUE        shift, and go to state 30
    FALSE       shift, and go to state 31
    IF          shift, and go to state 32
    FOR         shift, and go to state 33
    VARIABLE_T  shift, and go to state 34
    INT_LIT     shift, and go to state 35
    FLOAT_LIT   shift, and go to state 36
    IDENT       shift, and go to state 37
    ';'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '+'         shift, and go to state 41
    '-'         shift, and go to state 42
    '!'         shift, and go to state 43
    '"'         shift, and go to state 44

    StatementList       go to state 45
    Statement           go to state 46
    SimpleStmt          go to state 47
    AssignmentStmt      go to state 48
    ExpressionStmt      go to state 49
    IncDecStmt          go to state 50
    DeclarationStmt     go to state 51
    Block               go to state 52
    CoutStmt            go to state 53
    IFStmt              go to state 54
    FORStmt             go to state 55
    Expression          go to state 56
    LogicalORExpr       go to state 57
    LogicalANDExpr      go to state 58
    ComparisonExpr      go to state 59
    AdditionExpr        go to state 60
    MultiplicationExpr  go to state 61
    UnaryExpr           go to state 62
    unary_op            go to state 63
    Type                go to state 64
    PrimaryExpr         go to state 65
    Operand             go to state 66
    ConversionExpr      go to state 67
    Literal             go to state 68


State 24

    9 FunctionDeclStmt: VARIABLE_T IDENT $@2 '(' ParameterList ')' $@3 FuncBlock .

    $default  reduce using rule 9 (FunctionDeclStmt)


State 25

   44 CoutStmt: COUT . SHL PrintableList ';'

    SHL  shift, and go to state 69


State 26

   89 Type: INT .

    $default  reduce using rule 89 (Type)


State 27

   90 Type: FLOAT .

    $default  reduce using rule 90 (Type)


State 28

   91 Type: STRING .

    $default  reduce using rule 91 (Type)


State 29

   92 Type: BOOL .

    $default  reduce using rule 92 (Type)


State 30

  103 Literal: TRUE .

    $default  reduce using rule 103 (Literal)


State 31

  104 Literal: FALSE .

    $default  reduce using rule 104 (Literal)


State 32

   50 IFStmt: IF . Condition Block
   51       | IF . Condition Block ELSE Block
   52       | IF . Condition Block ELSE IFStmt

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    INT_LIT    shift, and go to state 35
    FLOAT_LIT  shift, and go to state 36
    IDENT      shift, and go to state 37
    '('        shift, and go to state 39
    '+'        shift, and go to state 41
    '-'        shift, and go to state 42
    '!'        shift, and go to state 43
    '"'        shift, and go to state 44

    Condition           go to state 70
    Expression          go to state 71
    LogicalORExpr       go to state 57
    LogicalANDExpr      go to state 58
    ComparisonExpr      go to state 59
    AdditionExpr        go to state 60
    MultiplicationExpr  go to state 61
    UnaryExpr           go to state 62
    unary_op            go to state 63
    Type                go to state 64
    PrimaryExpr         go to state 65
    Operand             go to state 66
    ConversionExpr      go to state 67
    Literal             go to state 68


State 33

   54 FORStmt: FOR . Condition Block
   55        | FOR . ForClause Block

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    INT_LIT    shift, and go to state 35
    FLOAT_LIT  shift, and go to state 36
    IDENT      shift, and go to state 37
    '('        shift, and go to state 39
    '+'        shift, and go to state 41
    '-'        shift, and go to state 42
    '!'        shift, and go to state 43
    '"'        shift, and go to state 44

    SimpleStmt          go to state 72
    AssignmentStmt      go to state 48
    ExpressionStmt      go to state 49
    IncDecStmt          go to state 50
    Condition           go to state 73
    ForClause           go to state 74
    InitStmt            go to state 75
    Expression          go to state 76
    LogicalORExpr       go to state 57
    LogicalANDExpr      go to state 58
    ComparisonExpr      go to state 59
    AdditionExpr        go to state 60
    MultiplicationExpr  go to state 61
    UnaryExpr           go to state 62
    unary_op            go to state 63
    Type                go to state 64
    PrimaryExpr         go to state 65
    Operand             go to state 66
    ConversionExpr      go to state 67
    Literal             go to state 68


State 34

   40 DeclarationStmt: VARIABLE_T . IDENT '=' Expression
   41                | VARIABLE_T . IDENT

    IDENT  shift, and go to state 77


State 35

  101 Literal: INT_LIT .

    $default  reduce using rule 101 (Literal)


State 36

  102 Literal: FLOAT_LIT .

    $default  reduce using rule 102 (Literal)


State 37

   96 Operand: IDENT .
   97        | IDENT . '(' ')'
   98        | IDENT . '(' FuncPara ')'

    '('  shift, and go to state 78

    $default  reduce using rule 96 (Operand)


State 38

   26 Statement: ';' .

    $default  reduce using rule 26 (Statement)


State 39

   99 Operand: '(' . Expression ')'

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    INT_LIT    shift, and go to state 35
    FLOAT_LIT  shift, and go to state 36
    IDENT      shift, and go to state 37
    '('        shift, and go to state 39
    '+'        shift, and go to state 41
    '-'        shift, and go to state 42
    '!'        shift, and go to state 43
    '"'        shift, and go to state 44

    Expression          go to state 79
    LogicalORExpr       go to state 57
    LogicalANDExpr      go to state 58
    ComparisonExpr      go to state 59
    AdditionExpr        go to state 60
    MultiplicationExpr  go to state 61
    UnaryExpr           go to state 62
    unary_op            go to state 63
    Type                go to state 64
    PrimaryExpr         go to state 65
    Operand             go to state 66
    ConversionExpr      go to state 67
    Literal             go to state 68


State 40

   43 Block: '{' . $@4 StatementList '}'

    $default  reduce using rule 42 ($@4)

    $@4  go to state 80


State 41

   86 unary_op: '+' .

    $default  reduce using rule 86 (unary_op)


State 42

   87 unary_op: '-' .

    $default  reduce using rule 87 (unary_op)


State 43

   88 unary_op: '!' .

    $default  reduce using rule 88 (unary_op)


State 44

  105 Literal: '"' . STR_LIT '"'

    STR_LIT  shift, and go to state 81


State 45

   15 FuncBlock: '{' StatementList . RETURNExpr ';' '}'

    RETURN  shift, and go to state 82

    $default  reduce using rule 17 (RETURNExpr)

    RETURNExpr  go to state 83


State 46

   18 StatementList: Statement . StatementList
   19              | Statement .

    COUT        shift, and go to state 25
    INT         shift, and go to state 26
    FLOAT       shift, and go to state 27
    STRING      shift, and go to state 28
    BOOL        shift, and go to state 29
    TRUE        shift, and go to state 30
    FALSE       shift, and go to state 31
    IF          shift, and go to state 32
    FOR         shift, and go to state 33
    VARIABLE_T  shift, and go to state 34
    INT_LIT     shift, and go to state 35
    FLOAT_LIT   shift, and go to state 36
    IDENT       shift, and go to state 37
    ';'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '+'         shift, and go to state 41
    '-'         shift, and go to state 42
    '!'         shift, and go to state 43
    '"'         shift, and go to state 44

    ';'       [reduce using rule 19 (StatementList)]
    $default  reduce using rule 19 (StatementList)

    StatementList       go to state 84
    Statement           go to state 46
    SimpleStmt          go to state 47
    AssignmentStmt      go to state 48
    ExpressionStmt      go to state 49
    IncDecStmt          go to state 50
    DeclarationStmt     go to state 51
    Block               go to state 52
    CoutStmt            go to state 53
    IFStmt              go to state 54
    FORStmt             go to state 55
    Expression          go to state 56
    LogicalORExpr       go to state 57
    LogicalANDExpr      go to state 58
    ComparisonExpr      go to state 59
    AdditionExpr        go to state 60
    MultiplicationExpr  go to state 61
    UnaryExpr           go to state 62
    unary_op            go to state 63
    Type                go to state 64
    PrimaryExpr         go to state 65
    Operand             go to state 66
    ConversionExpr      go to state 67
    Literal             go to state 68


State 47

   21 Statement: SimpleStmt . ';'

    ';'  shift, and go to state 85


State 48

   27 SimpleStmt: AssignmentStmt .

    $default  reduce using rule 27 (SimpleStmt)


State 49

   28 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 28 (SimpleStmt)


State 50

   29 SimpleStmt: IncDecStmt .

    $default  reduce using rule 29 (SimpleStmt)


State 51

   20 Statement: DeclarationStmt . ';'

    ';'  shift, and go to state 86


State 52

   22 Statement: Block . ';'

    ';'  shift, and go to state 87


State 53

   23 Statement: CoutStmt . ';'

    ';'  shift, and go to state 88


State 54

   24 Statement: IFStmt . ';'

    ';'  shift, and go to state 89


State 55

   25 Statement: FORStmt . ';'

    ';'  shift, and go to state 90


State 56

   30 AssignmentStmt: Expression . assign_op Expression
   37 ExpressionStmt: Expression .
   38 IncDecStmt: Expression . INC_ASSIGN
   39           | Expression . DEC_ASSIGN

    ADD_ASSIGN  shift, and go to state 91
    SUB_ASSIGN  shift, and go to state 92
    MUL_ASSIGN  shift, and go to state 93
    DIV_ASSIGN  shift, and go to state 94
    REM_ASSIGN  shift, and go to state 95
    INC_ASSIGN  shift, and go to state 96
    DEC_ASSIGN  shift, and go to state 97
    '='         shift, and go to state 98

    $default  reduce using rule 37 (ExpressionStmt)

    assign_op  go to state 99


State 57

   59 Expression: LogicalORExpr .

    $default  reduce using rule 59 (Expression)


State 58

   62 LogicalORExpr: LogicalANDExpr . LOR LogicalANDExpr
   63              | LogicalANDExpr .

    LOR  shift, and go to state 100

    $default  reduce using rule 63 (LogicalORExpr)


State 59

   64 LogicalANDExpr: ComparisonExpr . LAN ComparisonExpr
   65               | ComparisonExpr .

    LAN  shift, and go to state 101

    $default  reduce using rule 65 (LogicalANDExpr)


State 60

   66 ComparisonExpr: AdditionExpr . cmp_op AdditionExpr
   67               | AdditionExpr .
   69 AdditionExpr: AdditionExpr . add_op MultiplicationExpr

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '<'  shift, and go to state 106
    '>'  shift, and go to state 107
    '+'  shift, and go to state 108
    '-'  shift, and go to state 109

    $default  reduce using rule 67 (ComparisonExpr)

    cmp_op  go to state 110
    add_op  go to state 111


State 61

   68 AdditionExpr: MultiplicationExpr . add_op MultiplicationExpr
   70             | MultiplicationExpr .

    '+'  shift, and go to state 108
    '-'  shift, and go to state 109

    '+'       [reduce using rule 70 (AdditionExpr)]
    '-'       [reduce using rule 70 (AdditionExpr)]
    $default  reduce using rule 70 (AdditionExpr)

    add_op  go to state 112


State 62

   71 MultiplicationExpr: UnaryExpr . mul_op UnaryExpr
   72                   | UnaryExpr .

    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    $default  reduce using rule 72 (MultiplicationExpr)

    mul_op  go to state 116


State 63

   73 UnaryExpr: unary_op . UnaryExpr

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    INT_LIT    shift, and go to state 35
    FLOAT_LIT  shift, and go to state 36
    IDENT      shift, and go to state 37
    '('        shift, and go to state 39
    '+'        shift, and go to state 41
    '-'        shift, and go to state 42
    '!'        shift, and go to state 43
    '"'        shift, and go to state 44

    UnaryExpr       go to state 117
    unary_op        go to state 63
    Type            go to state 64
    PrimaryExpr     go to state 65
    Operand         go to state 66
    ConversionExpr  go to state 67
    Literal         go to state 68


State 64

  100 ConversionExpr: Type . '(' Expression ')'

    '('  shift, and go to state 118


State 65

   74 UnaryExpr: PrimaryExpr .

    $default  reduce using rule 74 (UnaryExpr)


State 66

   93 PrimaryExpr: Operand .

    $default  reduce using rule 93 (PrimaryExpr)


State 67

   94 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 94 (PrimaryExpr)


State 68

   95 Operand: Literal .

    $default  reduce using rule 95 (Operand)


State 69

   44 CoutStmt: COUT SHL . PrintableList ';'

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    ENDL       shift, and go to state 119
    INT_LIT    shift, and go to state 35
    FLOAT_LIT  shift, and go to state 36
    STR_LIT    shift, and go to state 120
    IDENT      shift, and go to state 37
    '('        shift, and go to state 39
    '+'        shift, and go to state 41
    '-'        shift, and go to state 42
    '!'        shift, and go to state 43
    '"'        shift, and go to state 44

    PrintableList       go to state 121
    Printable           go to state 122
    Expression          go to state 123
    LogicalORExpr       go to state 57
    LogicalANDExpr      go to state 58
    ComparisonExpr      go to state 59
    AdditionExpr        go to state 60
    MultiplicationExpr  go to state 61
    UnaryExpr           go to state 62
    unary_op            go to state 63
    Type                go to state 64
    PrimaryExpr         go to state 65
    Operand             go to state 66
    ConversionExpr      go to state 67
    Literal             go to state 68


State 70

   50 IFStmt: IF Condition . Block
   51       | IF Condition . Block ELSE Block
   52       | IF Condition . Block ELSE IFStmt

    '{'  shift, and go to state 40

    Block  go to state 124


State 71

   53 Condition: Expression .

    $default  reduce using rule 53 (Condition)


State 72

   57 InitStmt: SimpleStmt .

    $default  reduce using rule 57 (InitStmt)


State 73

   54 FORStmt: FOR Condition . Block

    '{'  shift, and go to state 40

    Block  go to state 125


State 74

   55 FORStmt: FOR ForClause . Block

    '{'  shift, and go to state 40

    Block  go to state 126


State 75

   56 ForClause: InitStmt . ';' Condition ';' PostStmt

    ';'  shift, and go to state 127


State 76

   30 AssignmentStmt: Expression . assign_op Expression
   37 ExpressionStmt: Expression .
   38 IncDecStmt: Expression . INC_ASSIGN
   39           | Expression . DEC_ASSIGN
   53 Condition: Expression .

    ADD_ASSIGN  shift, and go to state 91
    SUB_ASSIGN  shift, and go to state 92
    MUL_ASSIGN  shift, and go to state 93
    DIV_ASSIGN  shift, and go to state 94
    REM_ASSIGN  shift, and go to state 95
    INC_ASSIGN  shift, and go to state 96
    DEC_ASSIGN  shift, and go to state 97
    '='         shift, and go to state 98

    '{'       reduce using rule 53 (Condition)
    $default  reduce using rule 37 (ExpressionStmt)

    assign_op  go to state 99


State 77

   40 DeclarationStmt: VARIABLE_T IDENT . '=' Expression
   41                | VARIABLE_T IDENT .

    '='  shift, and go to state 128

    $default  reduce using rule 41 (DeclarationStmt)


State 78

   97 Operand: IDENT '(' . ')'
   98        | IDENT '(' . FuncPara ')'

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    INT_LIT    shift, and go to state 35
    FLOAT_LIT  shift, and go to state 36
    IDENT      shift, and go to state 37
    '('        shift, and go to state 39
    ')'        shift, and go to state 129
    '+'        shift, and go to state 41
    '-'        shift, and go to state 42
    '!'        shift, and go to state 43
    '"'        shift, and go to state 44

    Expression          go to state 130
    FuncPara            go to state 131
    LogicalORExpr       go to state 57
    LogicalANDExpr      go to state 58
    ComparisonExpr      go to state 59
    AdditionExpr        go to state 60
    MultiplicationExpr  go to state 61
    UnaryExpr           go to state 62
    unary_op            go to state 63
    Type                go to state 64
    PrimaryExpr         go to state 65
    Operand             go to state 66
    ConversionExpr      go to state 67
    Literal             go to state 68


State 79

   99 Operand: '(' Expression . ')'

    ')'  shift, and go to state 132


State 80

   43 Block: '{' $@4 . StatementList '}'

    COUT        shift, and go to state 25
    INT         shift, and go to state 26
    FLOAT       shift, and go to state 27
    STRING      shift, and go to state 28
    BOOL        shift, and go to state 29
    TRUE        shift, and go to state 30
    FALSE       shift, and go to state 31
    IF          shift, and go to state 32
    FOR         shift, and go to state 33
    VARIABLE_T  shift, and go to state 34
    INT_LIT     shift, and go to state 35
    FLOAT_LIT   shift, and go to state 36
    IDENT       shift, and go to state 37
    ';'         shift, and go to state 38
    '('         shift, and go to state 39
    '{'         shift, and go to state 40
    '+'         shift, and go to state 41
    '-'         shift, and go to state 42
    '!'         shift, and go to state 43
    '"'         shift, and go to state 44

    StatementList       go to state 133
    Statement           go to state 46
    SimpleStmt          go to state 47
    AssignmentStmt      go to state 48
    ExpressionStmt      go to state 49
    IncDecStmt          go to state 50
    DeclarationStmt     go to state 51
    Block               go to state 52
    CoutStmt            go to state 53
    IFStmt              go to state 54
    FORStmt             go to state 55
    Expression          go to state 56
    LogicalORExpr       go to state 57
    LogicalANDExpr      go to state 58
    ComparisonExpr      go to state 59
    AdditionExpr        go to state 60
    MultiplicationExpr  go to state 61
    UnaryExpr           go to state 62
    unary_op            go to state 63
    Type                go to state 64
    PrimaryExpr         go to state 65
    Operand             go to state 66
    ConversionExpr      go to state 67
    Literal             go to state 68


State 81

  105 Literal: '"' STR_LIT . '"'

    '"'  shift, and go to state 134


State 82

   16 RETURNExpr: RETURN . Expression

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    INT_LIT    shift, and go to state 35
    FLOAT_LIT  shift, and go to state 36
    IDENT      shift, and go to state 37
    '('        shift, and go to state 39
    '+'        shift, and go to state 41
    '-'        shift, and go to state 42
    '!'        shift, and go to state 43
    '"'        shift, and go to state 44

    Expression          go to state 135
    LogicalORExpr       go to state 57
    LogicalANDExpr      go to state 58
    ComparisonExpr      go to state 59
    AdditionExpr        go to state 60
    MultiplicationExpr  go to state 61
    UnaryExpr           go to state 62
    unary_op            go to state 63
    Type                go to state 64
    PrimaryExpr         go to state 65
    Operand             go to state 66
    ConversionExpr      go to state 67
    Literal             go to state 68


State 83

   15 FuncBlock: '{' StatementList RETURNExpr . ';' '}'

    ';'  shift, and go to state 136


State 84

   18 StatementList: Statement StatementList .

    $default  reduce using rule 18 (StatementList)


State 85

   21 Statement: SimpleStmt ';' .

    $default  reduce using rule 21 (Statement)


State 86

   20 Statement: DeclarationStmt ';' .

    $default  reduce using rule 20 (Statement)


State 87

   22 Statement: Block ';' .

    $default  reduce using rule 22 (Statement)


State 88

   23 Statement: CoutStmt ';' .

    $default  reduce using rule 23 (Statement)


State 89

   24 Statement: IFStmt ';' .

    $default  reduce using rule 24 (Statement)


State 90

   25 Statement: FORStmt ';' .

    $default  reduce using rule 25 (Statement)


State 91

   32 assign_op: ADD_ASSIGN .

    $default  reduce using rule 32 (assign_op)


State 92

   33 assign_op: SUB_ASSIGN .

    $default  reduce using rule 33 (assign_op)


State 93

   34 assign_op: MUL_ASSIGN .

    $default  reduce using rule 34 (assign_op)


State 94

   35 assign_op: DIV_ASSIGN .

    $default  reduce using rule 35 (assign_op)


State 95

   36 assign_op: REM_ASSIGN .

    $default  reduce using rule 36 (assign_op)


State 96

   38 IncDecStmt: Expression INC_ASSIGN .

    $default  reduce using rule 38 (IncDecStmt)


State 97

   39 IncDecStmt: Expression DEC_ASSIGN .

    $default  reduce using rule 39 (IncDecStmt)


State 98

   31 assign_op: '=' .

    $default  reduce using rule 31 (assign_op)


State 99

   30 AssignmentStmt: Expression assign_op . Expression

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    INT_LIT    shift, and go to state 35
    FLOAT_LIT  shift, and go to state 36
    IDENT      shift, and go to state 37
    '('        shift, and go to state 39
    '+'        shift, and go to state 41
    '-'        shift, and go to state 42
    '!'        shift, and go to state 43
    '"'        shift, and go to state 44

    Expression          go to state 137
    LogicalORExpr       go to state 57
    LogicalANDExpr      go to state 58
    ComparisonExpr      go to state 59
    AdditionExpr        go to state 60
    MultiplicationExpr  go to state 61
    UnaryExpr           go to state 62
    unary_op            go to state 63
    Type                go to state 64
    PrimaryExpr         go to state 65
    Operand             go to state 66
    ConversionExpr      go to state 67
    Literal             go to state 68


State 100

   62 LogicalORExpr: LogicalANDExpr LOR . LogicalANDExpr

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    INT_LIT    shift, and go to state 35
    FLOAT_LIT  shift, and go to state 36
    IDENT      shift, and go to state 37
    '('        shift, and go to state 39
    '+'        shift, and go to state 41
    '-'        shift, and go to state 42
    '!'        shift, and go to state 43
    '"'        shift, and go to state 44

    LogicalANDExpr      go to state 138
    ComparisonExpr      go to state 59
    AdditionExpr        go to state 60
    MultiplicationExpr  go to state 61
    UnaryExpr           go to state 62
    unary_op            go to state 63
    Type                go to state 64
    PrimaryExpr         go to state 65
    Operand             go to state 66
    ConversionExpr      go to state 67
    Literal             go to state 68


State 101

   64 LogicalANDExpr: ComparisonExpr LAN . ComparisonExpr

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    INT_LIT    shift, and go to state 35
    FLOAT_LIT  shift, and go to state 36
    IDENT      shift, and go to state 37
    '('        shift, and go to state 39
    '+'        shift, and go to state 41
    '-'        shift, and go to state 42
    '!'        shift, and go to state 43
    '"'        shift, and go to state 44

    ComparisonExpr      go to state 139
    AdditionExpr        go to state 60
    MultiplicationExpr  go to state 61
    UnaryExpr           go to state 62
    unary_op            go to state 63
    Type                go to state 64
    PrimaryExpr         go to state 65
    Operand             go to state 66
    ConversionExpr      go to state 67
    Literal             go to state 68


State 102

   80 cmp_op: GEQ .

    $default  reduce using rule 80 (cmp_op)


State 103

   78 cmp_op: LEQ .

    $default  reduce using rule 78 (cmp_op)


State 104

   75 cmp_op: EQL .

    $default  reduce using rule 75 (cmp_op)


State 105

   76 cmp_op: NEQ .

    $default  reduce using rule 76 (cmp_op)


State 106

   77 cmp_op: '<' .

    $default  reduce using rule 77 (cmp_op)


State 107

   79 cmp_op: '>' .

    $default  reduce using rule 79 (cmp_op)


State 108

   81 add_op: '+' .

    $default  reduce using rule 81 (add_op)


State 109

   82 add_op: '-' .

    $default  reduce using rule 82 (add_op)


State 110

   66 ComparisonExpr: AdditionExpr cmp_op . AdditionExpr

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    INT_LIT    shift, and go to state 35
    FLOAT_LIT  shift, and go to state 36
    IDENT      shift, and go to state 37
    '('        shift, and go to state 39
    '+'        shift, and go to state 41
    '-'        shift, and go to state 42
    '!'        shift, and go to state 43
    '"'        shift, and go to state 44

    AdditionExpr        go to state 140
    MultiplicationExpr  go to state 61
    UnaryExpr           go to state 62
    unary_op            go to state 63
    Type                go to state 64
    PrimaryExpr         go to state 65
    Operand             go to state 66
    ConversionExpr      go to state 67
    Literal             go to state 68


State 111

   69 AdditionExpr: AdditionExpr add_op . MultiplicationExpr

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    INT_LIT    shift, and go to state 35
    FLOAT_LIT  shift, and go to state 36
    IDENT      shift, and go to state 37
    '('        shift, and go to state 39
    '+'        shift, and go to state 41
    '-'        shift, and go to state 42
    '!'        shift, and go to state 43
    '"'        shift, and go to state 44

    MultiplicationExpr  go to state 141
    UnaryExpr           go to state 62
    unary_op            go to state 63
    Type                go to state 64
    PrimaryExpr         go to state 65
    Operand             go to state 66
    ConversionExpr      go to state 67
    Literal             go to state 68


State 112

   68 AdditionExpr: MultiplicationExpr add_op . MultiplicationExpr

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    INT_LIT    shift, and go to state 35
    FLOAT_LIT  shift, and go to state 36
    IDENT      shift, and go to state 37
    '('        shift, and go to state 39
    '+'        shift, and go to state 41
    '-'        shift, and go to state 42
    '!'        shift, and go to state 43
    '"'        shift, and go to state 44

    MultiplicationExpr  go to state 142
    UnaryExpr           go to state 62
    unary_op            go to state 63
    Type                go to state 64
    PrimaryExpr         go to state 65
    Operand             go to state 66
    ConversionExpr      go to state 67
    Literal             go to state 68


State 113

   83 mul_op: '*' .

    $default  reduce using rule 83 (mul_op)


State 114

   84 mul_op: '/' .

    $default  reduce using rule 84 (mul_op)


State 115

   85 mul_op: '%' .

    $default  reduce using rule 85 (mul_op)


State 116

   71 MultiplicationExpr: UnaryExpr mul_op . UnaryExpr

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    INT_LIT    shift, and go to state 35
    FLOAT_LIT  shift, and go to state 36
    IDENT      shift, and go to state 37
    '('        shift, and go to state 39
    '+'        shift, and go to state 41
    '-'        shift, and go to state 42
    '!'        shift, and go to state 43
    '"'        shift, and go to state 44

    UnaryExpr       go to state 143
    unary_op        go to state 63
    Type            go to state 64
    PrimaryExpr     go to state 65
    Operand         go to state 66
    ConversionExpr  go to state 67
    Literal         go to state 68


State 117

   73 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 73 (UnaryExpr)


State 118

  100 ConversionExpr: Type '(' . Expression ')'

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    INT_LIT    shift, and go to state 35
    FLOAT_LIT  shift, and go to state 36
    IDENT      shift, and go to state 37
    '('        shift, and go to state 39
    '+'        shift, and go to state 41
    '-'        shift, and go to state 42
    '!'        shift, and go to state 43
    '"'        shift, and go to state 44

    Expression          go to state 144
    LogicalORExpr       go to state 57
    LogicalANDExpr      go to state 58
    ComparisonExpr      go to state 59
    AdditionExpr        go to state 60
    MultiplicationExpr  go to state 61
    UnaryExpr           go to state 62
    unary_op            go to state 63
    Type                go to state 64
    PrimaryExpr         go to state 65
    Operand             go to state 66
    ConversionExpr      go to state 67
    Literal             go to state 68


State 119

   48 Printable: ENDL .

    $default  reduce using rule 48 (Printable)


State 120

   47 Printable: STR_LIT .

    $default  reduce using rule 47 (Printable)


State 121

   44 CoutStmt: COUT SHL PrintableList . ';'
   46 PrintableList: PrintableList . SHL Printable

    SHL  shift, and go to state 145
    ';'  shift, and go to state 146


State 122

   45 PrintableList: Printable .

    $default  reduce using rule 45 (PrintableList)


State 123

   49 Printable: Expression .

    $default  reduce using rule 49 (Printable)


State 124

   50 IFStmt: IF Condition Block .
   51       | IF Condition Block . ELSE Block
   52       | IF Condition Block . ELSE IFStmt

    ELSE  shift, and go to state 147

    $default  reduce using rule 50 (IFStmt)


State 125

   54 FORStmt: FOR Condition Block .

    $default  reduce using rule 54 (FORStmt)


State 126

   55 FORStmt: FOR ForClause Block .

    $default  reduce using rule 55 (FORStmt)


State 127

   56 ForClause: InitStmt ';' . Condition ';' PostStmt

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    INT_LIT    shift, and go to state 35
    FLOAT_LIT  shift, and go to state 36
    IDENT      shift, and go to state 37
    '('        shift, and go to state 39
    '+'        shift, and go to state 41
    '-'        shift, and go to state 42
    '!'        shift, and go to state 43
    '"'        shift, and go to state 44

    Condition           go to state 148
    Expression          go to state 71
    LogicalORExpr       go to state 57
    LogicalANDExpr      go to state 58
    ComparisonExpr      go to state 59
    AdditionExpr        go to state 60
    MultiplicationExpr  go to state 61
    UnaryExpr           go to state 62
    unary_op            go to state 63
    Type                go to state 64
    PrimaryExpr         go to state 65
    Operand             go to state 66
    ConversionExpr      go to state 67
    Literal             go to state 68


State 128

   40 DeclarationStmt: VARIABLE_T IDENT '=' . Expression

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    INT_LIT    shift, and go to state 35
    FLOAT_LIT  shift, and go to state 36
    IDENT      shift, and go to state 37
    '('        shift, and go to state 39
    '+'        shift, and go to state 41
    '-'        shift, and go to state 42
    '!'        shift, and go to state 43
    '"'        shift, and go to state 44

    Expression          go to state 149
    LogicalORExpr       go to state 57
    LogicalANDExpr      go to state 58
    ComparisonExpr      go to state 59
    AdditionExpr        go to state 60
    MultiplicationExpr  go to state 61
    UnaryExpr           go to state 62
    unary_op            go to state 63
    Type                go to state 64
    PrimaryExpr         go to state 65
    Operand             go to state 66
    ConversionExpr      go to state 67
    Literal             go to state 68


State 129

   97 Operand: IDENT '(' ')' .

    $default  reduce using rule 97 (Operand)


State 130

   60 FuncPara: Expression . ',' FuncPara
   61         | Expression .

    ','  shift, and go to state 150

    $default  reduce using rule 61 (FuncPara)


State 131

   98 Operand: IDENT '(' FuncPara . ')'

    ')'  shift, and go to state 151


State 132

   99 Operand: '(' Expression ')' .

    $default  reduce using rule 99 (Operand)


State 133

   43 Block: '{' $@4 StatementList . '}'

    '}'  shift, and go to state 152


State 134

  105 Literal: '"' STR_LIT '"' .

    $default  reduce using rule 105 (Literal)


State 135

   16 RETURNExpr: RETURN Expression .

    $default  reduce using rule 16 (RETURNExpr)


State 136

   15 FuncBlock: '{' StatementList RETURNExpr ';' . '}'

    '}'  shift, and go to state 153


State 137

   30 AssignmentStmt: Expression assign_op Expression .

    $default  reduce using rule 30 (AssignmentStmt)


State 138

   62 LogicalORExpr: LogicalANDExpr LOR LogicalANDExpr .

    $default  reduce using rule 62 (LogicalORExpr)


State 139

   64 LogicalANDExpr: ComparisonExpr LAN ComparisonExpr .

    $default  reduce using rule 64 (LogicalANDExpr)


State 140

   66 ComparisonExpr: AdditionExpr cmp_op AdditionExpr .
   69 AdditionExpr: AdditionExpr . add_op MultiplicationExpr

    '+'  shift, and go to state 108
    '-'  shift, and go to state 109

    $default  reduce using rule 66 (ComparisonExpr)

    add_op  go to state 111


State 141

   69 AdditionExpr: AdditionExpr add_op MultiplicationExpr .

    $default  reduce using rule 69 (AdditionExpr)


State 142

   68 AdditionExpr: MultiplicationExpr add_op MultiplicationExpr .

    $default  reduce using rule 68 (AdditionExpr)


State 143

   71 MultiplicationExpr: UnaryExpr mul_op UnaryExpr .

    $default  reduce using rule 71 (MultiplicationExpr)


State 144

  100 ConversionExpr: Type '(' Expression . ')'

    ')'  shift, and go to state 154


State 145

   46 PrintableList: PrintableList SHL . Printable

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    ENDL       shift, and go to state 119
    INT_LIT    shift, and go to state 35
    FLOAT_LIT  shift, and go to state 36
    STR_LIT    shift, and go to state 120
    IDENT      shift, and go to state 37
    '('        shift, and go to state 39
    '+'        shift, and go to state 41
    '-'        shift, and go to state 42
    '!'        shift, and go to state 43
    '"'        shift, and go to state 44

    Printable           go to state 155
    Expression          go to state 123
    LogicalORExpr       go to state 57
    LogicalANDExpr      go to state 58
    ComparisonExpr      go to state 59
    AdditionExpr        go to state 60
    MultiplicationExpr  go to state 61
    UnaryExpr           go to state 62
    unary_op            go to state 63
    Type                go to state 64
    PrimaryExpr         go to state 65
    Operand             go to state 66
    ConversionExpr      go to state 67
    Literal             go to state 68


State 146

   44 CoutStmt: COUT SHL PrintableList ';' .

    $default  reduce using rule 44 (CoutStmt)


State 147

   51 IFStmt: IF Condition Block ELSE . Block
   52       | IF Condition Block ELSE . IFStmt

    IF   shift, and go to state 32
    '{'  shift, and go to state 40

    Block   go to state 156
    IFStmt  go to state 157


State 148

   56 ForClause: InitStmt ';' Condition . ';' PostStmt

    ';'  shift, and go to state 158


State 149

   40 DeclarationStmt: VARIABLE_T IDENT '=' Expression .

    $default  reduce using rule 40 (DeclarationStmt)


State 150

   60 FuncPara: Expression ',' . FuncPara

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    INT_LIT    shift, and go to state 35
    FLOAT_LIT  shift, and go to state 36
    IDENT      shift, and go to state 37
    '('        shift, and go to state 39
    '+'        shift, and go to state 41
    '-'        shift, and go to state 42
    '!'        shift, and go to state 43
    '"'        shift, and go to state 44

    Expression          go to state 130
    FuncPara            go to state 159
    LogicalORExpr       go to state 57
    LogicalANDExpr      go to state 58
    ComparisonExpr      go to state 59
    AdditionExpr        go to state 60
    MultiplicationExpr  go to state 61
    UnaryExpr           go to state 62
    unary_op            go to state 63
    Type                go to state 64
    PrimaryExpr         go to state 65
    Operand             go to state 66
    ConversionExpr      go to state 67
    Literal             go to state 68


State 151

   98 Operand: IDENT '(' FuncPara ')' .

    $default  reduce using rule 98 (Operand)


State 152

   43 Block: '{' $@4 StatementList '}' .

    $default  reduce using rule 43 (Block)


State 153

   15 FuncBlock: '{' StatementList RETURNExpr ';' '}' .

    $default  reduce using rule 15 (FuncBlock)


State 154

  100 ConversionExpr: Type '(' Expression ')' .

    $default  reduce using rule 100 (ConversionExpr)


State 155

   46 PrintableList: PrintableList SHL Printable .

    $default  reduce using rule 46 (PrintableList)


State 156

   51 IFStmt: IF Condition Block ELSE Block .

    $default  reduce using rule 51 (IFStmt)


State 157

   52 IFStmt: IF Condition Block ELSE IFStmt .

    $default  reduce using rule 52 (IFStmt)


State 158

   56 ForClause: InitStmt ';' Condition ';' . PostStmt

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    INT_LIT    shift, and go to state 35
    FLOAT_LIT  shift, and go to state 36
    IDENT      shift, and go to state 37
    '('        shift, and go to state 39
    '+'        shift, and go to state 41
    '-'        shift, and go to state 42
    '!'        shift, and go to state 43
    '"'        shift, and go to state 44

    SimpleStmt          go to state 160
    AssignmentStmt      go to state 48
    ExpressionStmt      go to state 49
    IncDecStmt          go to state 50
    PostStmt            go to state 161
    Expression          go to state 56
    LogicalORExpr       go to state 57
    LogicalANDExpr      go to state 58
    ComparisonExpr      go to state 59
    AdditionExpr        go to state 60
    MultiplicationExpr  go to state 61
    UnaryExpr           go to state 62
    unary_op            go to state 63
    Type                go to state 64
    PrimaryExpr         go to state 65
    Operand             go to state 66
    ConversionExpr      go to state 67
    Literal             go to state 68


State 159

   60 FuncPara: Expression ',' FuncPara .

    $default  reduce using rule 60 (FuncPara)


State 160

   58 PostStmt: SimpleStmt .

    $default  reduce using rule 58 (PostStmt)


State 161

   56 ForClause: InitStmt ';' Condition ';' PostStmt .

    $default  reduce using rule 56 (ForClause)
