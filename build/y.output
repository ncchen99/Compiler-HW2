Terminals unused in grammar

    SHR
    BAN
    BOR
    BNT
    BXO
    ADD
    SUB
    MUL
    DIV
    REM
    NOT
    GTR
    LES
    VAL_ASSIGN
    BAN_ASSIGN
    BOR_ASSIGN
    BXO_ASSIGN
    SHR_ASSIGN
    SHL_ASSIGN
    WHILE
    BREAK
    CONTINUE
    BOOL_LIT


State 47 conflicts: 1 shift/reduce
State 62 conflicts: 2 shift/reduce


Grammar

    0 $accept: Program $end

    1 $@1: %empty

    2 Program: $@1 GlobalStatementList

    3 GlobalStatementList: GlobalStatementList GlobalStatement
    4                    | GlobalStatement

    5 GlobalStatement: FunctionDeclStmt
    6                | ';'

    7 $@2: %empty

    8 $@3: %empty

    9 FunctionDeclStmt: VARIABLE_T IDENT $@2 '(' ParameterList ')' $@3 FuncBlock

   10 ParameterList: Parameter
   11              | ParameterList ',' Parameter
   12              | %empty

   13 Parameter: VARIABLE_T IDENT
   14          | VARIABLE_T IDENT '[' ']'

   15 FuncBlock: '{' StatementList RETURNExpr ';' '}'

   16 RETURNExpr: RETURN Expression
   17           | %empty

   18 StatementList: Statement StatementList
   19              | Statement

   20 Statement: DeclarationStmt ';'
   21          | SimpleStmt ';'
   22          | Block ';'
   23          | CoutStmt ';'
   24          | IFStmt ';'
   25          | FORStmt ';'
   26          | ';'

   27 SimpleStmt: AssignmentStmt
   28           | ExpressionStmt
   29           | IncDecStmt

   30 AssignmentStmt: Expression assign_op Expression

   31 assign_op: '='
   32          | ADD_ASSIGN
   33          | SUB_ASSIGN
   34          | MUL_ASSIGN
   35          | DIV_ASSIGN
   36          | REM_ASSIGN

   37 ExpressionStmt: Expression

   38 IncDecStmt: Expression INC_ASSIGN
   39           | Expression DEC_ASSIGN

   40 DeclarationStmt: VARIABLE_T IDENT '=' Expression
   41                | VARIABLE_T IDENT

   42 $@4: %empty

   43 Block: '{' $@4 StatementList '}'

   44 CoutStmt: COUT SHL PrintableList

   45 PrintableList: Printable
   46              | PrintableList SHL Printable

   47 Printable: Expression

   48 IFStmt: IF Condition Block
   49       | IF Condition Block ELSE Block
   50       | IF Condition Block ELSE IFStmt

   51 Condition: Expression

   52 FORStmt: FOR Condition Block
   53        | FOR ForClause Block

   54 ForClause: InitStmt ';' Condition ';' PostStmt

   55 InitStmt: SimpleStmt

   56 PostStmt: SimpleStmt

   57 Expression: LogicalORExpr

   58 LogicalORExpr: LogicalANDExpr LOR LogicalANDExpr
   59              | LogicalANDExpr

   60 LogicalANDExpr: ComparisonExpr LAN ComparisonExpr
   61               | ComparisonExpr

   62 ComparisonExpr: AdditionExpr cmp_op AdditionExpr
   63               | AdditionExpr

   64 AdditionExpr: MultiplicationExpr add_op MultiplicationExpr
   65             | AdditionExpr add_op MultiplicationExpr
   66             | MultiplicationExpr

   67 MultiplicationExpr: UnaryExpr mul_op UnaryExpr
   68                   | UnaryExpr

   69 UnaryExpr: unary_op UnaryExpr
   70          | PrimaryExpr

   71 cmp_op: EQL
   72       | NEQ
   73       | '<'
   74       | LEQ
   75       | '>'
   76       | GEQ

   77 add_op: '+'
   78       | '-'

   79 mul_op: '*'
   80       | '/'
   81       | '%'

   82 unary_op: '+'
   83         | '-'
   84         | '!'

   85 Type: INT
   86     | FLOAT
   87     | STRING
   88     | BOOL

   89 PrimaryExpr: Operand
   90            | ConversionExpr

   91 Operand: Literal
   92        | IDENT
   93        | IDENT '(' ')'
   94        | '(' Expression ')'

   95 ConversionExpr: Type '(' Expression ')'

   96 Literal: INT_LIT
   97        | FLOAT_LIT
   98        | TRUE
   99        | FALSE
  100        | STR_LIT
  101        | ENDL


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 84
    '%' (37) 81
    '(' (40) 9 93 94 95
    ')' (41) 9 93 94 95
    '*' (42) 79
    '+' (43) 77 82
    ',' (44) 11
    '-' (45) 78 83
    '/' (47) 80
    ';' (59) 6 15 20 21 22 23 24 25 26 54
    '<' (60) 73
    '=' (61) 31 40
    '>' (62) 75
    '[' (91) 14
    ']' (93) 14
    '{' (123) 15 43
    '}' (125) 15 43
    error (256)
    COUT (258) 44
    INT (259) 85
    FLOAT (260) 86
    STRING (261) 87
    BOOL (262) 88
    TRUE (263) 98
    FALSE (264) 99
    SHR (265)
    SHL (266) 44 46
    BAN (267)
    BOR (268)
    BNT (269)
    BXO (270)
    ADD (271)
    SUB (272)
    MUL (273)
    DIV (274)
    REM (275)
    NOT (276)
    GTR (277)
    LES (278)
    GEQ (279) 76
    LEQ (280) 74
    EQL (281) 71
    NEQ (282) 72
    LAN (283) 60
    LOR (284) 58
    VAL_ASSIGN (285)
    ADD_ASSIGN (286) 32
    SUB_ASSIGN (287) 33
    MUL_ASSIGN (288) 34
    DIV_ASSIGN (289) 35
    REM_ASSIGN (290) 36
    BAN_ASSIGN (291)
    BOR_ASSIGN (292)
    BXO_ASSIGN (293)
    SHR_ASSIGN (294)
    SHL_ASSIGN (295)
    INC_ASSIGN (296) 38
    DEC_ASSIGN (297) 39
    IF (298) 48 49 50
    ELSE (299) 49 50
    FOR (300) 52 53
    WHILE (301)
    RETURN (302) 16
    BREAK (303)
    CONTINUE (304)
    ENDL (305) 101
    VARIABLE_T <var_type> (306) 9 13 14 40 41
    INT_LIT <i_var> (307) 96
    FLOAT_LIT <f_var> (308) 97
    STR_LIT <s_var> (309) 100
    IDENT <s_var> (310) 9 13 14 40 41 92 93
    BOOL_LIT <b_var> (311)


Nonterminals, with rules where they appear

    $accept (74)
        on left: 0
    Program (75)
        on left: 2
        on right: 0
    $@1 (76)
        on left: 1
        on right: 2
    GlobalStatementList (77)
        on left: 3 4
        on right: 2 3
    GlobalStatement (78)
        on left: 5 6
        on right: 3 4
    FunctionDeclStmt (79)
        on left: 9
        on right: 5
    $@2 (80)
        on left: 7
        on right: 9
    $@3 (81)
        on left: 8
        on right: 9
    ParameterList (82)
        on left: 10 11 12
        on right: 9 11
    Parameter (83)
        on left: 13 14
        on right: 10 11
    FuncBlock (84)
        on left: 15
        on right: 9
    RETURNExpr (85)
        on left: 16 17
        on right: 15
    StatementList (86)
        on left: 18 19
        on right: 15 18 43
    Statement (87)
        on left: 20 21 22 23 24 25 26
        on right: 18 19
    SimpleStmt (88)
        on left: 27 28 29
        on right: 21 55 56
    AssignmentStmt (89)
        on left: 30
        on right: 27
    assign_op <s_var> (90)
        on left: 31 32 33 34 35 36
        on right: 30
    ExpressionStmt (91)
        on left: 37
        on right: 28
    IncDecStmt (92)
        on left: 38 39
        on right: 29
    DeclarationStmt (93)
        on left: 40 41
        on right: 20
    Block (94)
        on left: 43
        on right: 22 48 49 50 52 53
    $@4 (95)
        on left: 42
        on right: 43
    CoutStmt (96)
        on left: 44
        on right: 23
    PrintableList <s_var> (97)
        on left: 45 46
        on right: 44 46
    Printable (98)
        on left: 47
        on right: 45 46
    IFStmt (99)
        on left: 48 49 50
        on right: 24 50
    Condition (100)
        on left: 51
        on right: 48 49 50 52 54
    FORStmt (101)
        on left: 52 53
        on right: 25
    ForClause (102)
        on left: 54
        on right: 53
    InitStmt (103)
        on left: 55
        on right: 54
    PostStmt (104)
        on left: 56
        on right: 54
    Expression <s_var> (105)
        on left: 57
        on right: 16 30 37 38 39 40 47 51 94 95
    LogicalORExpr <s_var> (106)
        on left: 58 59
        on right: 57
    LogicalANDExpr <s_var> (107)
        on left: 60 61
        on right: 58 59
    ComparisonExpr <s_var> (108)
        on left: 62 63
        on right: 60 61
    AdditionExpr <s_var> (109)
        on left: 64 65 66
        on right: 62 63 65
    MultiplicationExpr <s_var> (110)
        on left: 67 68
        on right: 64 65 66
    UnaryExpr <s_var> (111)
        on left: 69 70
        on right: 67 68 69
    cmp_op <s_var> (112)
        on left: 71 72 73 74 75 76
        on right: 62
    add_op <s_var> (113)
        on left: 77 78
        on right: 64 65
    mul_op <s_var> (114)
        on left: 79 80 81
        on right: 67
    unary_op <s_var> (115)
        on left: 82 83 84
        on right: 69
    Type <s_var> (116)
        on left: 85 86 87 88
        on right: 95
    PrimaryExpr <s_var> (117)
        on left: 89 90
        on right: 70
    Operand <s_var> (118)
        on left: 91 92 93 94
        on right: 89
    ConversionExpr (119)
        on left: 95
        on right: 90
    Literal <s_var> (120)
        on left: 96 97 98 99 100 101
        on right: 91


State 0

    0 $accept: . Program $end

    $default  reduce using rule 1 ($@1)

    Program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: Program . $end

    $end  shift, and go to state 3


State 2

    2 Program: $@1 . GlobalStatementList

    VARIABLE_T  shift, and go to state 4
    ';'         shift, and go to state 5

    GlobalStatementList  go to state 6
    GlobalStatement      go to state 7
    FunctionDeclStmt     go to state 8


State 3

    0 $accept: Program $end .

    $default  accept


State 4

    9 FunctionDeclStmt: VARIABLE_T . IDENT $@2 '(' ParameterList ')' $@3 FuncBlock

    IDENT  shift, and go to state 9


State 5

    6 GlobalStatement: ';' .

    $default  reduce using rule 6 (GlobalStatement)


State 6

    2 Program: $@1 GlobalStatementList .
    3 GlobalStatementList: GlobalStatementList . GlobalStatement

    VARIABLE_T  shift, and go to state 4
    ';'         shift, and go to state 5

    $default  reduce using rule 2 (Program)

    GlobalStatement   go to state 10
    FunctionDeclStmt  go to state 8


State 7

    4 GlobalStatementList: GlobalStatement .

    $default  reduce using rule 4 (GlobalStatementList)


State 8

    5 GlobalStatement: FunctionDeclStmt .

    $default  reduce using rule 5 (GlobalStatement)


State 9

    9 FunctionDeclStmt: VARIABLE_T IDENT . $@2 '(' ParameterList ')' $@3 FuncBlock

    $default  reduce using rule 7 ($@2)

    $@2  go to state 11


State 10

    3 GlobalStatementList: GlobalStatementList GlobalStatement .

    $default  reduce using rule 3 (GlobalStatementList)


State 11

    9 FunctionDeclStmt: VARIABLE_T IDENT $@2 . '(' ParameterList ')' $@3 FuncBlock

    '('  shift, and go to state 12


State 12

    9 FunctionDeclStmt: VARIABLE_T IDENT $@2 '(' . ParameterList ')' $@3 FuncBlock

    VARIABLE_T  shift, and go to state 13

    $default  reduce using rule 12 (ParameterList)

    ParameterList  go to state 14
    Parameter      go to state 15


State 13

   13 Parameter: VARIABLE_T . IDENT
   14          | VARIABLE_T . IDENT '[' ']'

    IDENT  shift, and go to state 16


State 14

    9 FunctionDeclStmt: VARIABLE_T IDENT $@2 '(' ParameterList . ')' $@3 FuncBlock
   11 ParameterList: ParameterList . ',' Parameter

    ')'  shift, and go to state 17
    ','  shift, and go to state 18


State 15

   10 ParameterList: Parameter .

    $default  reduce using rule 10 (ParameterList)


State 16

   13 Parameter: VARIABLE_T IDENT .
   14          | VARIABLE_T IDENT . '[' ']'

    '['  shift, and go to state 19

    $default  reduce using rule 13 (Parameter)


State 17

    9 FunctionDeclStmt: VARIABLE_T IDENT $@2 '(' ParameterList ')' . $@3 FuncBlock

    $default  reduce using rule 8 ($@3)

    $@3  go to state 20


State 18

   11 ParameterList: ParameterList ',' . Parameter

    VARIABLE_T  shift, and go to state 13

    Parameter  go to state 21


State 19

   14 Parameter: VARIABLE_T IDENT '[' . ']'

    ']'  shift, and go to state 22


State 20

    9 FunctionDeclStmt: VARIABLE_T IDENT $@2 '(' ParameterList ')' $@3 . FuncBlock

    '{'  shift, and go to state 23

    FuncBlock  go to state 24


State 21

   11 ParameterList: ParameterList ',' Parameter .

    $default  reduce using rule 11 (ParameterList)


State 22

   14 Parameter: VARIABLE_T IDENT '[' ']' .

    $default  reduce using rule 14 (Parameter)


State 23

   15 FuncBlock: '{' . StatementList RETURNExpr ';' '}'

    COUT        shift, and go to state 25
    INT         shift, and go to state 26
    FLOAT       shift, and go to state 27
    STRING      shift, and go to state 28
    BOOL        shift, and go to state 29
    TRUE        shift, and go to state 30
    FALSE       shift, and go to state 31
    IF          shift, and go to state 32
    FOR         shift, and go to state 33
    ENDL        shift, and go to state 34
    VARIABLE_T  shift, and go to state 35
    INT_LIT     shift, and go to state 36
    FLOAT_LIT   shift, and go to state 37
    STR_LIT     shift, and go to state 38
    IDENT       shift, and go to state 39
    ';'         shift, and go to state 40
    '('         shift, and go to state 41
    '{'         shift, and go to state 42
    '+'         shift, and go to state 43
    '-'         shift, and go to state 44
    '!'         shift, and go to state 45

    StatementList       go to state 46
    Statement           go to state 47
    SimpleStmt          go to state 48
    AssignmentStmt      go to state 49
    ExpressionStmt      go to state 50
    IncDecStmt          go to state 51
    DeclarationStmt     go to state 52
    Block               go to state 53
    CoutStmt            go to state 54
    IFStmt              go to state 55
    FORStmt             go to state 56
    Expression          go to state 57
    LogicalORExpr       go to state 58
    LogicalANDExpr      go to state 59
    ComparisonExpr      go to state 60
    AdditionExpr        go to state 61
    MultiplicationExpr  go to state 62
    UnaryExpr           go to state 63
    unary_op            go to state 64
    Type                go to state 65
    PrimaryExpr         go to state 66
    Operand             go to state 67
    ConversionExpr      go to state 68
    Literal             go to state 69


State 24

    9 FunctionDeclStmt: VARIABLE_T IDENT $@2 '(' ParameterList ')' $@3 FuncBlock .

    $default  reduce using rule 9 (FunctionDeclStmt)


State 25

   44 CoutStmt: COUT . SHL PrintableList

    SHL  shift, and go to state 70


State 26

   85 Type: INT .

    $default  reduce using rule 85 (Type)


State 27

   86 Type: FLOAT .

    $default  reduce using rule 86 (Type)


State 28

   87 Type: STRING .

    $default  reduce using rule 87 (Type)


State 29

   88 Type: BOOL .

    $default  reduce using rule 88 (Type)


State 30

   98 Literal: TRUE .

    $default  reduce using rule 98 (Literal)


State 31

   99 Literal: FALSE .

    $default  reduce using rule 99 (Literal)


State 32

   48 IFStmt: IF . Condition Block
   49       | IF . Condition Block ELSE Block
   50       | IF . Condition Block ELSE IFStmt

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    ENDL       shift, and go to state 34
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37
    STR_LIT    shift, and go to state 38
    IDENT      shift, and go to state 39
    '('        shift, and go to state 41
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    Condition           go to state 71
    Expression          go to state 72
    LogicalORExpr       go to state 58
    LogicalANDExpr      go to state 59
    ComparisonExpr      go to state 60
    AdditionExpr        go to state 61
    MultiplicationExpr  go to state 62
    UnaryExpr           go to state 63
    unary_op            go to state 64
    Type                go to state 65
    PrimaryExpr         go to state 66
    Operand             go to state 67
    ConversionExpr      go to state 68
    Literal             go to state 69


State 33

   52 FORStmt: FOR . Condition Block
   53        | FOR . ForClause Block

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    ENDL       shift, and go to state 34
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37
    STR_LIT    shift, and go to state 38
    IDENT      shift, and go to state 39
    '('        shift, and go to state 41
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    SimpleStmt          go to state 73
    AssignmentStmt      go to state 49
    ExpressionStmt      go to state 50
    IncDecStmt          go to state 51
    Condition           go to state 74
    ForClause           go to state 75
    InitStmt            go to state 76
    Expression          go to state 77
    LogicalORExpr       go to state 58
    LogicalANDExpr      go to state 59
    ComparisonExpr      go to state 60
    AdditionExpr        go to state 61
    MultiplicationExpr  go to state 62
    UnaryExpr           go to state 63
    unary_op            go to state 64
    Type                go to state 65
    PrimaryExpr         go to state 66
    Operand             go to state 67
    ConversionExpr      go to state 68
    Literal             go to state 69


State 34

  101 Literal: ENDL .

    $default  reduce using rule 101 (Literal)


State 35

   40 DeclarationStmt: VARIABLE_T . IDENT '=' Expression
   41                | VARIABLE_T . IDENT

    IDENT  shift, and go to state 78


State 36

   96 Literal: INT_LIT .

    $default  reduce using rule 96 (Literal)


State 37

   97 Literal: FLOAT_LIT .

    $default  reduce using rule 97 (Literal)


State 38

  100 Literal: STR_LIT .

    $default  reduce using rule 100 (Literal)


State 39

   92 Operand: IDENT .
   93        | IDENT . '(' ')'

    '('  shift, and go to state 79

    $default  reduce using rule 92 (Operand)


State 40

   26 Statement: ';' .

    $default  reduce using rule 26 (Statement)


State 41

   94 Operand: '(' . Expression ')'

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    ENDL       shift, and go to state 34
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37
    STR_LIT    shift, and go to state 38
    IDENT      shift, and go to state 39
    '('        shift, and go to state 41
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    Expression          go to state 80
    LogicalORExpr       go to state 58
    LogicalANDExpr      go to state 59
    ComparisonExpr      go to state 60
    AdditionExpr        go to state 61
    MultiplicationExpr  go to state 62
    UnaryExpr           go to state 63
    unary_op            go to state 64
    Type                go to state 65
    PrimaryExpr         go to state 66
    Operand             go to state 67
    ConversionExpr      go to state 68
    Literal             go to state 69


State 42

   43 Block: '{' . $@4 StatementList '}'

    $default  reduce using rule 42 ($@4)

    $@4  go to state 81


State 43

   82 unary_op: '+' .

    $default  reduce using rule 82 (unary_op)


State 44

   83 unary_op: '-' .

    $default  reduce using rule 83 (unary_op)


State 45

   84 unary_op: '!' .

    $default  reduce using rule 84 (unary_op)


State 46

   15 FuncBlock: '{' StatementList . RETURNExpr ';' '}'

    RETURN  shift, and go to state 82

    $default  reduce using rule 17 (RETURNExpr)

    RETURNExpr  go to state 83


State 47

   18 StatementList: Statement . StatementList
   19              | Statement .

    COUT        shift, and go to state 25
    INT         shift, and go to state 26
    FLOAT       shift, and go to state 27
    STRING      shift, and go to state 28
    BOOL        shift, and go to state 29
    TRUE        shift, and go to state 30
    FALSE       shift, and go to state 31
    IF          shift, and go to state 32
    FOR         shift, and go to state 33
    ENDL        shift, and go to state 34
    VARIABLE_T  shift, and go to state 35
    INT_LIT     shift, and go to state 36
    FLOAT_LIT   shift, and go to state 37
    STR_LIT     shift, and go to state 38
    IDENT       shift, and go to state 39
    ';'         shift, and go to state 40
    '('         shift, and go to state 41
    '{'         shift, and go to state 42
    '+'         shift, and go to state 43
    '-'         shift, and go to state 44
    '!'         shift, and go to state 45

    ';'       [reduce using rule 19 (StatementList)]
    $default  reduce using rule 19 (StatementList)

    StatementList       go to state 84
    Statement           go to state 47
    SimpleStmt          go to state 48
    AssignmentStmt      go to state 49
    ExpressionStmt      go to state 50
    IncDecStmt          go to state 51
    DeclarationStmt     go to state 52
    Block               go to state 53
    CoutStmt            go to state 54
    IFStmt              go to state 55
    FORStmt             go to state 56
    Expression          go to state 57
    LogicalORExpr       go to state 58
    LogicalANDExpr      go to state 59
    ComparisonExpr      go to state 60
    AdditionExpr        go to state 61
    MultiplicationExpr  go to state 62
    UnaryExpr           go to state 63
    unary_op            go to state 64
    Type                go to state 65
    PrimaryExpr         go to state 66
    Operand             go to state 67
    ConversionExpr      go to state 68
    Literal             go to state 69


State 48

   21 Statement: SimpleStmt . ';'

    ';'  shift, and go to state 85


State 49

   27 SimpleStmt: AssignmentStmt .

    $default  reduce using rule 27 (SimpleStmt)


State 50

   28 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 28 (SimpleStmt)


State 51

   29 SimpleStmt: IncDecStmt .

    $default  reduce using rule 29 (SimpleStmt)


State 52

   20 Statement: DeclarationStmt . ';'

    ';'  shift, and go to state 86


State 53

   22 Statement: Block . ';'

    ';'  shift, and go to state 87


State 54

   23 Statement: CoutStmt . ';'

    ';'  shift, and go to state 88


State 55

   24 Statement: IFStmt . ';'

    ';'  shift, and go to state 89


State 56

   25 Statement: FORStmt . ';'

    ';'  shift, and go to state 90


State 57

   30 AssignmentStmt: Expression . assign_op Expression
   37 ExpressionStmt: Expression .
   38 IncDecStmt: Expression . INC_ASSIGN
   39           | Expression . DEC_ASSIGN

    ADD_ASSIGN  shift, and go to state 91
    SUB_ASSIGN  shift, and go to state 92
    MUL_ASSIGN  shift, and go to state 93
    DIV_ASSIGN  shift, and go to state 94
    REM_ASSIGN  shift, and go to state 95
    INC_ASSIGN  shift, and go to state 96
    DEC_ASSIGN  shift, and go to state 97
    '='         shift, and go to state 98

    $default  reduce using rule 37 (ExpressionStmt)

    assign_op  go to state 99


State 58

   57 Expression: LogicalORExpr .

    $default  reduce using rule 57 (Expression)


State 59

   58 LogicalORExpr: LogicalANDExpr . LOR LogicalANDExpr
   59              | LogicalANDExpr .

    LOR  shift, and go to state 100

    $default  reduce using rule 59 (LogicalORExpr)


State 60

   60 LogicalANDExpr: ComparisonExpr . LAN ComparisonExpr
   61               | ComparisonExpr .

    LAN  shift, and go to state 101

    $default  reduce using rule 61 (LogicalANDExpr)


State 61

   62 ComparisonExpr: AdditionExpr . cmp_op AdditionExpr
   63               | AdditionExpr .
   65 AdditionExpr: AdditionExpr . add_op MultiplicationExpr

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '<'  shift, and go to state 106
    '>'  shift, and go to state 107
    '+'  shift, and go to state 108
    '-'  shift, and go to state 109

    $default  reduce using rule 63 (ComparisonExpr)

    cmp_op  go to state 110
    add_op  go to state 111


State 62

   64 AdditionExpr: MultiplicationExpr . add_op MultiplicationExpr
   66             | MultiplicationExpr .

    '+'  shift, and go to state 108
    '-'  shift, and go to state 109

    '+'       [reduce using rule 66 (AdditionExpr)]
    '-'       [reduce using rule 66 (AdditionExpr)]
    $default  reduce using rule 66 (AdditionExpr)

    add_op  go to state 112


State 63

   67 MultiplicationExpr: UnaryExpr . mul_op UnaryExpr
   68                   | UnaryExpr .

    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    $default  reduce using rule 68 (MultiplicationExpr)

    mul_op  go to state 116


State 64

   69 UnaryExpr: unary_op . UnaryExpr

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    ENDL       shift, and go to state 34
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37
    STR_LIT    shift, and go to state 38
    IDENT      shift, and go to state 39
    '('        shift, and go to state 41
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    UnaryExpr       go to state 117
    unary_op        go to state 64
    Type            go to state 65
    PrimaryExpr     go to state 66
    Operand         go to state 67
    ConversionExpr  go to state 68
    Literal         go to state 69


State 65

   95 ConversionExpr: Type . '(' Expression ')'

    '('  shift, and go to state 118


State 66

   70 UnaryExpr: PrimaryExpr .

    $default  reduce using rule 70 (UnaryExpr)


State 67

   89 PrimaryExpr: Operand .

    $default  reduce using rule 89 (PrimaryExpr)


State 68

   90 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 90 (PrimaryExpr)


State 69

   91 Operand: Literal .

    $default  reduce using rule 91 (Operand)


State 70

   44 CoutStmt: COUT SHL . PrintableList

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    ENDL       shift, and go to state 34
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37
    STR_LIT    shift, and go to state 38
    IDENT      shift, and go to state 39
    '('        shift, and go to state 41
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    PrintableList       go to state 119
    Printable           go to state 120
    Expression          go to state 121
    LogicalORExpr       go to state 58
    LogicalANDExpr      go to state 59
    ComparisonExpr      go to state 60
    AdditionExpr        go to state 61
    MultiplicationExpr  go to state 62
    UnaryExpr           go to state 63
    unary_op            go to state 64
    Type                go to state 65
    PrimaryExpr         go to state 66
    Operand             go to state 67
    ConversionExpr      go to state 68
    Literal             go to state 69


State 71

   48 IFStmt: IF Condition . Block
   49       | IF Condition . Block ELSE Block
   50       | IF Condition . Block ELSE IFStmt

    '{'  shift, and go to state 42

    Block  go to state 122


State 72

   51 Condition: Expression .

    $default  reduce using rule 51 (Condition)


State 73

   55 InitStmt: SimpleStmt .

    $default  reduce using rule 55 (InitStmt)


State 74

   52 FORStmt: FOR Condition . Block

    '{'  shift, and go to state 42

    Block  go to state 123


State 75

   53 FORStmt: FOR ForClause . Block

    '{'  shift, and go to state 42

    Block  go to state 124


State 76

   54 ForClause: InitStmt . ';' Condition ';' PostStmt

    ';'  shift, and go to state 125


State 77

   30 AssignmentStmt: Expression . assign_op Expression
   37 ExpressionStmt: Expression .
   38 IncDecStmt: Expression . INC_ASSIGN
   39           | Expression . DEC_ASSIGN
   51 Condition: Expression .

    ADD_ASSIGN  shift, and go to state 91
    SUB_ASSIGN  shift, and go to state 92
    MUL_ASSIGN  shift, and go to state 93
    DIV_ASSIGN  shift, and go to state 94
    REM_ASSIGN  shift, and go to state 95
    INC_ASSIGN  shift, and go to state 96
    DEC_ASSIGN  shift, and go to state 97
    '='         shift, and go to state 98

    '{'       reduce using rule 51 (Condition)
    $default  reduce using rule 37 (ExpressionStmt)

    assign_op  go to state 99


State 78

   40 DeclarationStmt: VARIABLE_T IDENT . '=' Expression
   41                | VARIABLE_T IDENT .

    '='  shift, and go to state 126

    $default  reduce using rule 41 (DeclarationStmt)


State 79

   93 Operand: IDENT '(' . ')'

    ')'  shift, and go to state 127


State 80

   94 Operand: '(' Expression . ')'

    ')'  shift, and go to state 128


State 81

   43 Block: '{' $@4 . StatementList '}'

    COUT        shift, and go to state 25
    INT         shift, and go to state 26
    FLOAT       shift, and go to state 27
    STRING      shift, and go to state 28
    BOOL        shift, and go to state 29
    TRUE        shift, and go to state 30
    FALSE       shift, and go to state 31
    IF          shift, and go to state 32
    FOR         shift, and go to state 33
    ENDL        shift, and go to state 34
    VARIABLE_T  shift, and go to state 35
    INT_LIT     shift, and go to state 36
    FLOAT_LIT   shift, and go to state 37
    STR_LIT     shift, and go to state 38
    IDENT       shift, and go to state 39
    ';'         shift, and go to state 40
    '('         shift, and go to state 41
    '{'         shift, and go to state 42
    '+'         shift, and go to state 43
    '-'         shift, and go to state 44
    '!'         shift, and go to state 45

    StatementList       go to state 129
    Statement           go to state 47
    SimpleStmt          go to state 48
    AssignmentStmt      go to state 49
    ExpressionStmt      go to state 50
    IncDecStmt          go to state 51
    DeclarationStmt     go to state 52
    Block               go to state 53
    CoutStmt            go to state 54
    IFStmt              go to state 55
    FORStmt             go to state 56
    Expression          go to state 57
    LogicalORExpr       go to state 58
    LogicalANDExpr      go to state 59
    ComparisonExpr      go to state 60
    AdditionExpr        go to state 61
    MultiplicationExpr  go to state 62
    UnaryExpr           go to state 63
    unary_op            go to state 64
    Type                go to state 65
    PrimaryExpr         go to state 66
    Operand             go to state 67
    ConversionExpr      go to state 68
    Literal             go to state 69


State 82

   16 RETURNExpr: RETURN . Expression

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    ENDL       shift, and go to state 34
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37
    STR_LIT    shift, and go to state 38
    IDENT      shift, and go to state 39
    '('        shift, and go to state 41
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    Expression          go to state 130
    LogicalORExpr       go to state 58
    LogicalANDExpr      go to state 59
    ComparisonExpr      go to state 60
    AdditionExpr        go to state 61
    MultiplicationExpr  go to state 62
    UnaryExpr           go to state 63
    unary_op            go to state 64
    Type                go to state 65
    PrimaryExpr         go to state 66
    Operand             go to state 67
    ConversionExpr      go to state 68
    Literal             go to state 69


State 83

   15 FuncBlock: '{' StatementList RETURNExpr . ';' '}'

    ';'  shift, and go to state 131


State 84

   18 StatementList: Statement StatementList .

    $default  reduce using rule 18 (StatementList)


State 85

   21 Statement: SimpleStmt ';' .

    $default  reduce using rule 21 (Statement)


State 86

   20 Statement: DeclarationStmt ';' .

    $default  reduce using rule 20 (Statement)


State 87

   22 Statement: Block ';' .

    $default  reduce using rule 22 (Statement)


State 88

   23 Statement: CoutStmt ';' .

    $default  reduce using rule 23 (Statement)


State 89

   24 Statement: IFStmt ';' .

    $default  reduce using rule 24 (Statement)


State 90

   25 Statement: FORStmt ';' .

    $default  reduce using rule 25 (Statement)


State 91

   32 assign_op: ADD_ASSIGN .

    $default  reduce using rule 32 (assign_op)


State 92

   33 assign_op: SUB_ASSIGN .

    $default  reduce using rule 33 (assign_op)


State 93

   34 assign_op: MUL_ASSIGN .

    $default  reduce using rule 34 (assign_op)


State 94

   35 assign_op: DIV_ASSIGN .

    $default  reduce using rule 35 (assign_op)


State 95

   36 assign_op: REM_ASSIGN .

    $default  reduce using rule 36 (assign_op)


State 96

   38 IncDecStmt: Expression INC_ASSIGN .

    $default  reduce using rule 38 (IncDecStmt)


State 97

   39 IncDecStmt: Expression DEC_ASSIGN .

    $default  reduce using rule 39 (IncDecStmt)


State 98

   31 assign_op: '=' .

    $default  reduce using rule 31 (assign_op)


State 99

   30 AssignmentStmt: Expression assign_op . Expression

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    ENDL       shift, and go to state 34
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37
    STR_LIT    shift, and go to state 38
    IDENT      shift, and go to state 39
    '('        shift, and go to state 41
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    Expression          go to state 132
    LogicalORExpr       go to state 58
    LogicalANDExpr      go to state 59
    ComparisonExpr      go to state 60
    AdditionExpr        go to state 61
    MultiplicationExpr  go to state 62
    UnaryExpr           go to state 63
    unary_op            go to state 64
    Type                go to state 65
    PrimaryExpr         go to state 66
    Operand             go to state 67
    ConversionExpr      go to state 68
    Literal             go to state 69


State 100

   58 LogicalORExpr: LogicalANDExpr LOR . LogicalANDExpr

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    ENDL       shift, and go to state 34
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37
    STR_LIT    shift, and go to state 38
    IDENT      shift, and go to state 39
    '('        shift, and go to state 41
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    LogicalANDExpr      go to state 133
    ComparisonExpr      go to state 60
    AdditionExpr        go to state 61
    MultiplicationExpr  go to state 62
    UnaryExpr           go to state 63
    unary_op            go to state 64
    Type                go to state 65
    PrimaryExpr         go to state 66
    Operand             go to state 67
    ConversionExpr      go to state 68
    Literal             go to state 69


State 101

   60 LogicalANDExpr: ComparisonExpr LAN . ComparisonExpr

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    ENDL       shift, and go to state 34
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37
    STR_LIT    shift, and go to state 38
    IDENT      shift, and go to state 39
    '('        shift, and go to state 41
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    ComparisonExpr      go to state 134
    AdditionExpr        go to state 61
    MultiplicationExpr  go to state 62
    UnaryExpr           go to state 63
    unary_op            go to state 64
    Type                go to state 65
    PrimaryExpr         go to state 66
    Operand             go to state 67
    ConversionExpr      go to state 68
    Literal             go to state 69


State 102

   76 cmp_op: GEQ .

    $default  reduce using rule 76 (cmp_op)


State 103

   74 cmp_op: LEQ .

    $default  reduce using rule 74 (cmp_op)


State 104

   71 cmp_op: EQL .

    $default  reduce using rule 71 (cmp_op)


State 105

   72 cmp_op: NEQ .

    $default  reduce using rule 72 (cmp_op)


State 106

   73 cmp_op: '<' .

    $default  reduce using rule 73 (cmp_op)


State 107

   75 cmp_op: '>' .

    $default  reduce using rule 75 (cmp_op)


State 108

   77 add_op: '+' .

    $default  reduce using rule 77 (add_op)


State 109

   78 add_op: '-' .

    $default  reduce using rule 78 (add_op)


State 110

   62 ComparisonExpr: AdditionExpr cmp_op . AdditionExpr

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    ENDL       shift, and go to state 34
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37
    STR_LIT    shift, and go to state 38
    IDENT      shift, and go to state 39
    '('        shift, and go to state 41
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    AdditionExpr        go to state 135
    MultiplicationExpr  go to state 62
    UnaryExpr           go to state 63
    unary_op            go to state 64
    Type                go to state 65
    PrimaryExpr         go to state 66
    Operand             go to state 67
    ConversionExpr      go to state 68
    Literal             go to state 69


State 111

   65 AdditionExpr: AdditionExpr add_op . MultiplicationExpr

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    ENDL       shift, and go to state 34
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37
    STR_LIT    shift, and go to state 38
    IDENT      shift, and go to state 39
    '('        shift, and go to state 41
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    MultiplicationExpr  go to state 136
    UnaryExpr           go to state 63
    unary_op            go to state 64
    Type                go to state 65
    PrimaryExpr         go to state 66
    Operand             go to state 67
    ConversionExpr      go to state 68
    Literal             go to state 69


State 112

   64 AdditionExpr: MultiplicationExpr add_op . MultiplicationExpr

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    ENDL       shift, and go to state 34
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37
    STR_LIT    shift, and go to state 38
    IDENT      shift, and go to state 39
    '('        shift, and go to state 41
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    MultiplicationExpr  go to state 137
    UnaryExpr           go to state 63
    unary_op            go to state 64
    Type                go to state 65
    PrimaryExpr         go to state 66
    Operand             go to state 67
    ConversionExpr      go to state 68
    Literal             go to state 69


State 113

   79 mul_op: '*' .

    $default  reduce using rule 79 (mul_op)


State 114

   80 mul_op: '/' .

    $default  reduce using rule 80 (mul_op)


State 115

   81 mul_op: '%' .

    $default  reduce using rule 81 (mul_op)


State 116

   67 MultiplicationExpr: UnaryExpr mul_op . UnaryExpr

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    ENDL       shift, and go to state 34
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37
    STR_LIT    shift, and go to state 38
    IDENT      shift, and go to state 39
    '('        shift, and go to state 41
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    UnaryExpr       go to state 138
    unary_op        go to state 64
    Type            go to state 65
    PrimaryExpr     go to state 66
    Operand         go to state 67
    ConversionExpr  go to state 68
    Literal         go to state 69


State 117

   69 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 69 (UnaryExpr)


State 118

   95 ConversionExpr: Type '(' . Expression ')'

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    ENDL       shift, and go to state 34
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37
    STR_LIT    shift, and go to state 38
    IDENT      shift, and go to state 39
    '('        shift, and go to state 41
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    Expression          go to state 139
    LogicalORExpr       go to state 58
    LogicalANDExpr      go to state 59
    ComparisonExpr      go to state 60
    AdditionExpr        go to state 61
    MultiplicationExpr  go to state 62
    UnaryExpr           go to state 63
    unary_op            go to state 64
    Type                go to state 65
    PrimaryExpr         go to state 66
    Operand             go to state 67
    ConversionExpr      go to state 68
    Literal             go to state 69


State 119

   44 CoutStmt: COUT SHL PrintableList .
   46 PrintableList: PrintableList . SHL Printable

    SHL  shift, and go to state 140

    $default  reduce using rule 44 (CoutStmt)


State 120

   45 PrintableList: Printable .

    $default  reduce using rule 45 (PrintableList)


State 121

   47 Printable: Expression .

    $default  reduce using rule 47 (Printable)


State 122

   48 IFStmt: IF Condition Block .
   49       | IF Condition Block . ELSE Block
   50       | IF Condition Block . ELSE IFStmt

    ELSE  shift, and go to state 141

    $default  reduce using rule 48 (IFStmt)


State 123

   52 FORStmt: FOR Condition Block .

    $default  reduce using rule 52 (FORStmt)


State 124

   53 FORStmt: FOR ForClause Block .

    $default  reduce using rule 53 (FORStmt)


State 125

   54 ForClause: InitStmt ';' . Condition ';' PostStmt

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    ENDL       shift, and go to state 34
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37
    STR_LIT    shift, and go to state 38
    IDENT      shift, and go to state 39
    '('        shift, and go to state 41
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    Condition           go to state 142
    Expression          go to state 72
    LogicalORExpr       go to state 58
    LogicalANDExpr      go to state 59
    ComparisonExpr      go to state 60
    AdditionExpr        go to state 61
    MultiplicationExpr  go to state 62
    UnaryExpr           go to state 63
    unary_op            go to state 64
    Type                go to state 65
    PrimaryExpr         go to state 66
    Operand             go to state 67
    ConversionExpr      go to state 68
    Literal             go to state 69


State 126

   40 DeclarationStmt: VARIABLE_T IDENT '=' . Expression

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    ENDL       shift, and go to state 34
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37
    STR_LIT    shift, and go to state 38
    IDENT      shift, and go to state 39
    '('        shift, and go to state 41
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    Expression          go to state 143
    LogicalORExpr       go to state 58
    LogicalANDExpr      go to state 59
    ComparisonExpr      go to state 60
    AdditionExpr        go to state 61
    MultiplicationExpr  go to state 62
    UnaryExpr           go to state 63
    unary_op            go to state 64
    Type                go to state 65
    PrimaryExpr         go to state 66
    Operand             go to state 67
    ConversionExpr      go to state 68
    Literal             go to state 69


State 127

   93 Operand: IDENT '(' ')' .

    $default  reduce using rule 93 (Operand)


State 128

   94 Operand: '(' Expression ')' .

    $default  reduce using rule 94 (Operand)


State 129

   43 Block: '{' $@4 StatementList . '}'

    '}'  shift, and go to state 144


State 130

   16 RETURNExpr: RETURN Expression .

    $default  reduce using rule 16 (RETURNExpr)


State 131

   15 FuncBlock: '{' StatementList RETURNExpr ';' . '}'

    '}'  shift, and go to state 145


State 132

   30 AssignmentStmt: Expression assign_op Expression .

    $default  reduce using rule 30 (AssignmentStmt)


State 133

   58 LogicalORExpr: LogicalANDExpr LOR LogicalANDExpr .

    $default  reduce using rule 58 (LogicalORExpr)


State 134

   60 LogicalANDExpr: ComparisonExpr LAN ComparisonExpr .

    $default  reduce using rule 60 (LogicalANDExpr)


State 135

   62 ComparisonExpr: AdditionExpr cmp_op AdditionExpr .
   65 AdditionExpr: AdditionExpr . add_op MultiplicationExpr

    '+'  shift, and go to state 108
    '-'  shift, and go to state 109

    $default  reduce using rule 62 (ComparisonExpr)

    add_op  go to state 111


State 136

   65 AdditionExpr: AdditionExpr add_op MultiplicationExpr .

    $default  reduce using rule 65 (AdditionExpr)


State 137

   64 AdditionExpr: MultiplicationExpr add_op MultiplicationExpr .

    $default  reduce using rule 64 (AdditionExpr)


State 138

   67 MultiplicationExpr: UnaryExpr mul_op UnaryExpr .

    $default  reduce using rule 67 (MultiplicationExpr)


State 139

   95 ConversionExpr: Type '(' Expression . ')'

    ')'  shift, and go to state 146


State 140

   46 PrintableList: PrintableList SHL . Printable

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    ENDL       shift, and go to state 34
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37
    STR_LIT    shift, and go to state 38
    IDENT      shift, and go to state 39
    '('        shift, and go to state 41
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    Printable           go to state 147
    Expression          go to state 121
    LogicalORExpr       go to state 58
    LogicalANDExpr      go to state 59
    ComparisonExpr      go to state 60
    AdditionExpr        go to state 61
    MultiplicationExpr  go to state 62
    UnaryExpr           go to state 63
    unary_op            go to state 64
    Type                go to state 65
    PrimaryExpr         go to state 66
    Operand             go to state 67
    ConversionExpr      go to state 68
    Literal             go to state 69


State 141

   49 IFStmt: IF Condition Block ELSE . Block
   50       | IF Condition Block ELSE . IFStmt

    IF   shift, and go to state 32
    '{'  shift, and go to state 42

    Block   go to state 148
    IFStmt  go to state 149


State 142

   54 ForClause: InitStmt ';' Condition . ';' PostStmt

    ';'  shift, and go to state 150


State 143

   40 DeclarationStmt: VARIABLE_T IDENT '=' Expression .

    $default  reduce using rule 40 (DeclarationStmt)


State 144

   43 Block: '{' $@4 StatementList '}' .

    $default  reduce using rule 43 (Block)


State 145

   15 FuncBlock: '{' StatementList RETURNExpr ';' '}' .

    $default  reduce using rule 15 (FuncBlock)


State 146

   95 ConversionExpr: Type '(' Expression ')' .

    $default  reduce using rule 95 (ConversionExpr)


State 147

   46 PrintableList: PrintableList SHL Printable .

    $default  reduce using rule 46 (PrintableList)


State 148

   49 IFStmt: IF Condition Block ELSE Block .

    $default  reduce using rule 49 (IFStmt)


State 149

   50 IFStmt: IF Condition Block ELSE IFStmt .

    $default  reduce using rule 50 (IFStmt)


State 150

   54 ForClause: InitStmt ';' Condition ';' . PostStmt

    INT        shift, and go to state 26
    FLOAT      shift, and go to state 27
    STRING     shift, and go to state 28
    BOOL       shift, and go to state 29
    TRUE       shift, and go to state 30
    FALSE      shift, and go to state 31
    ENDL       shift, and go to state 34
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37
    STR_LIT    shift, and go to state 38
    IDENT      shift, and go to state 39
    '('        shift, and go to state 41
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    SimpleStmt          go to state 151
    AssignmentStmt      go to state 49
    ExpressionStmt      go to state 50
    IncDecStmt          go to state 51
    PostStmt            go to state 152
    Expression          go to state 57
    LogicalORExpr       go to state 58
    LogicalANDExpr      go to state 59
    ComparisonExpr      go to state 60
    AdditionExpr        go to state 61
    MultiplicationExpr  go to state 62
    UnaryExpr           go to state 63
    unary_op            go to state 64
    Type                go to state 65
    PrimaryExpr         go to state 66
    Operand             go to state 67
    ConversionExpr      go to state 68
    Literal             go to state 69


State 151

   56 PostStmt: SimpleStmt .

    $default  reduce using rule 56 (PostStmt)


State 152

   54 ForClause: InitStmt ';' Condition ';' PostStmt .

    $default  reduce using rule 54 (ForClause)
